{
  "components-api": [
    {
      "exportName": "default",
      "displayName": "UiQuestion",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to set question title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "description",
          "description": "Use this props to set description title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to set valid state of the question.",
          "required": false,
          "type": {
            "name": "QuestionTranslationSetting",
            "elements": [
              {
                "name": "string"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  info: 'What does it mean?',\n  why: 'Why am I being asked this?',\n  issue: {\n    action: 'Report an issue with this question',\n    feedback: 'Thank you. Weâ€™ll review this question as soon as possible.',\n    skip: 'Skip this question',\n  },\n})"
          }
        },
        {
          "name": "settings",
          "description": "Use this props to setup question.",
          "required": false,
          "type": {
            "name": "QuestionTranslationSetting",
            "elements": [
              {
                "name": "boolean"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  info: false,\n  why: false,\n  issue: {\n    action: false,\n    feedback: false,\n    skip: true,\n  },\n})"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs for title UiHeading",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "headingDescriptionAttrs",
          "description": "Use this props to pass attrs for description UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonInfoAttrs",
          "description": "Use this props to pass attrs for info UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconInfoAttrs",
          "description": "Use this props to pass attrs for info UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'info' })"
          }
        },
        {
          "name": "buttonWhyAttrs",
          "description": "Use this props to pass attrs for why UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonIssueAttrs",
          "description": "Use this props to pass attrs for issue UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "notificationFeedbackAttrs",
          "description": "Use this props to pass attrs for feedback UiNotification",
          "required": false,
          "type": {
            "name": "NotificationAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ type: 'success' })"
          }
        }
      ],
      "slots": [
        {
          "name": "title",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "description",
          "scoped": true,
          "description": "Use this slot to replace description template.",
          "bindings": [
            {
              "name": "description",
              "title": "binding"
            },
            {
              "name": "headingDescriptionAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "actions-top",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "buttonInfoAttrs",
              "title": "binding"
            },
            {
              "name": "iconInfoAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "info",
          "scoped": true,
          "description": "Use this slot to replace info template.",
          "bindings": [
            {
              "name": "buttonInfoAttrs",
              "title": "binding"
            },
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "iconInfoAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside question."
        },
        {
          "name": "actions-bottom",
          "scoped": true,
          "description": "Use this slot to replace actions template.",
          "bindings": [
            {
              "name": "hasActionsBottom",
              "title": "binding"
            },
            {
              "name": "buttonWhyAttrs",
              "title": "binding"
            },
            {
              "name": "buttonIssueAttrs",
              "title": "binding"
            },
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "why",
          "scoped": true,
          "description": "Use this slot to replace why template.",
          "bindings": [
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "buttonWhyAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "issue",
          "scoped": true,
          "description": "Use this slot to replace issue template.",
          "bindings": [
            {
              "name": "buttonIssueAttrs",
              "title": "binding"
            },
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "feedback",
          "scoped": true,
          "description": "Use this slot to replace feedback template.",
          "bindings": [
            {
              "name": "hasFeedback",
              "title": "binding"
            },
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "notificationFeedbackAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/templates/UiQuestion/UiQuestion.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMessage",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to set message title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "subtitle",
          "description": "Use this props to set message subtitle.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "illustration",
          "description": "Use this props to set message illustration.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "textSubtitleAttrs",
          "description": "Use this props to pass attrs for subtitle UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs for title UiHeading.",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconIllustrationAttrs",
          "description": "Use this props to pass attrs for illustration UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace content template.",
          "bindings": [
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "subtitle",
          "scoped": true,
          "description": "Use this slot to replace subtitle template.",
          "bindings": [
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "title",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place message content."
        },
        {
          "name": "aside",
          "scoped": true,
          "description": "Use this slot to replace aside template.",
          "bindings": [
            {
              "name": "illustration",
              "title": "binding"
            },
            {
              "name": "iconIllustrationAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "illustration",
          "scoped": true,
          "description": "Use this slot to replace illustration template.",
          "bindings": [
            {
              "name": "iconIllustrationAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/templates/UiMessage/UiMessage.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiTabs",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set opened items.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass tabs items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "TabsItemAttrsProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place tabs."
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to place tab item content.",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiTabs/UiTabs.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiSimpleQuestion",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "TileModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass items for question",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "SimpleQuestionItem"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "legend",
          "description": "Use this props to set legend.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "TSIndexedAccessType"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "legend",
          "scoped": true,
          "bindings": [
            {
              "name": "legend",
              "title": "binding"
            },
            {
              "name": "id",
              "title": "binding"
            }
          ]
        },
        {
          "name": "tile",
          "scoped": true,
          "description": "Use this slot to replace tile template",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "isTileSmall",
              "title": "binding"
            },
            {
              "name": "updateHandler",
              "title": "binding"
            },
            {
              "name": "tileItemAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiSimpleQuestion/UiSimpleQuestion.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiSidePanel",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "SidePanelModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "title",
          "description": "Use this props to set side panel title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "subtitle",
          "description": "Use this props to set side panel subtitle.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "transitionBackdropAttrs",
          "description": "Use this props to pass attrs for backdrop Transition.",
          "required": false,
          "type": {
            "name": "TransitionProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  appear: true,\n  name: 'fade',\n})"
          }
        },
        {
          "name": "backdropAttrs",
          "description": "Use this props to pass attrs for UiBackdrop.",
          "required": false,
          "type": {
            "name": "BackdropAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "dialogAttrs",
          "description": "Use this props to pass attrs for dialog element",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "DialogHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "transitionDialogAttrs",
          "description": "Use this props to pass attrs for dialog Transition.",
          "required": false,
          "type": {
            "name": "TransitionProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  appear: true,\n  name: 'slide-from-end',\n})"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs for title UiHeading.",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ level: 2 })"
          }
        },
        {
          "name": "textSubtitleAttrs",
          "description": "Use this props to pass attrs for subtitle UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonCloseAttrs",
          "description": "Use this props to pass attrs for close UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconCloseAttrs",
          "description": "Use this props to pass attrs for close UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'close' })"
          }
        },
        {
          "name": "contentAttrs",
          "description": "Use this props to pass attrs for content element",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "boolean"
            ]
          }
        },
        {
          "name": "after-enter"
        }
      ],
      "slots": [
        {
          "name": "backdrop",
          "scoped": true,
          "description": "Use this slot to replace backdrop template.",
          "bindings": [
            {
              "name": "transitionBackdropAttrs",
              "title": "binding"
            },
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "backdropAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            }
          ]
        },
        {
          "name": "container",
          "scoped": true,
          "description": "Use this slot to replace container template.",
          "bindings": [
            {
              "name": "transitionDialogAttrs",
              "title": "binding"
            },
            {
              "name": "dialogAttrs",
              "title": "binding"
            },
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "afterEnterHandler",
              "title": "binding"
            },
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "header",
          "scoped": true,
          "description": "Use this slot to replace header template.",
          "bindings": [
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "title",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "subtitle",
          "scoped": true,
          "description": "Use this slot to replace subtitle template.",
          "bindings": [
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "close",
          "scoped": true,
          "description": "Use this slot to replace close template.",
          "bindings": [
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace content template.",
          "bindings": [
            {
              "name": "contentAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place side panel content."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiSidePanel/UiSidePanel.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMultipleChoices",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "hint",
          "description": "Use this props to set hint for question.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "touched",
          "description": "Use this props to touch component and show validation errors.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "invalid",
          "description": "Use this props to set invalid state of component.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "items",
          "description": "Use this props to set possible choices.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "MultipleChoicesItemAttrsProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "options",
          "description": "Use this props to set possible options.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "MultipleChoicesOption"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "MultipleChoicesModelValue"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "alertHintAttrs",
          "description": "Use this props to pass attrs for hint UiAlert",
          "required": false,
          "type": {
            "name": "AlertAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "Array"
            ],
            "elements": [
              {
                "name": "MultipleChoicesModelValue"
              }
            ]
          }
        },
        {
          "name": "update:invalid",
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "hint",
          "scoped": true,
          "description": "Use this slot to replace hint template.",
          "bindings": [
            {
              "name": "hint",
              "title": "binding"
            },
            {
              "name": "alertHintAttrs",
              "title": "binding"
            },
            {
              "name": "hintType",
              "title": "binding"
            }
          ]
        },
        {
          "name": "choice",
          "scoped": true,
          "description": "Use this slot to replace choice template.",
          "bindings": [
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "index",
              "title": "binding"
            },
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "options",
              "title": "binding"
            },
            {
              "name": "hasError",
              "title": "binding"
            },
            {
              "name": "updateHandler",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMultipleChoices/UiMultipleChoices.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMultipleAnswer",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "MultipleAnswerModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "items",
          "description": "Use this props to set possible items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "TSParenthesizedType"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "name",
          "description": "Use this props to group inputs with name attribute",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "invalid",
          "description": "Use this props to set invalid state of component.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "hint",
          "description": "Use this props to set hint for question.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "touched",
          "description": "Use this props to touch component and show validation errors.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "hintAlertAttrs",
          "description": "Use this props to pass attrs for hint UiAlert",
          "required": false,
          "type": {
            "name": "AlertAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "tag",
          "description": "Use this props to set multiple answer tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'fieldset'"
          }
        },
        {
          "name": "legend",
          "description": "Use this props to set legend.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "MultipleAnswerModelValue"
            ]
          }
        },
        {
          "name": "update:invalid",
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "hint",
          "scoped": true,
          "description": "Use this slot to replace hint template.",
          "bindings": [
            {
              "name": "hint",
              "title": "binding"
            },
            {
              "name": "hintType",
              "title": "binding"
            },
            {
              "name": "hintAlertAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "legend",
          "scoped": true,
          "description": "Use this slot to replace legend template.",
          "bindings": [
            {
              "name": "legend",
              "title": "binding"
            }
          ]
        },
        {
          "name": "list-item",
          "scoped": true,
          "description": "Use this slot to replace list-item template.",
          "bindings": [
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            },
            {
              "name": "hasError",
              "title": "binding"
            }
          ]
        },
        {
          "name": "slotName",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMultipleAnswer/UiMultipleAnswer.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiModal",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props to set dialog visibility.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "title",
          "description": "Use this props to set dialog title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "description",
          "description": "Use this props to set dialog description.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "isClosable",
          "description": "Use this props to hide close icon.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "hasCancel",
          "description": "Use this props to hide cancel UiButton.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "hasConfirm",
          "description": "Use this props to hide confirm UiButton.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to override labels inside component translation.",
          "required": false,
          "type": {
            "name": "ModalTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  confirm: 'Ok',\n  cancel: 'Cancel',\n})"
          }
        },
        {
          "name": "transitionBackdropAttrs",
          "description": "Use this props to pass attrs for backdrop Transition",
          "required": false,
          "type": {
            "name": "TransitionProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  appear: true,\n  name: 'fade',\n})"
          }
        },
        {
          "name": "backdropAttrs",
          "description": "Use this props to pass attrs for UiBackdrop",
          "required": false,
          "type": {
            "name": "BackdropAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "dialogAttrs",
          "description": "Use this props to pass attrs for dialog element",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "DialogHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "transitionDialogAttrs",
          "description": "Use this props to pass attrs for dialog Transition",
          "required": false,
          "type": {
            "name": "TransitionProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  appear: true,\n  name: 'fade',\n})"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs for title UiHeading",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ level: 2 })"
          }
        },
        {
          "name": "textDescriptionAttrs",
          "description": "Use this props to pass attrs for description UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonConfirmAttrs",
          "description": "Use this props to pass attrs for confirm UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonCancelAttrs",
          "description": "Use this props to pass attrs for cancel UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonCloseAttrs",
          "description": "Use this props to pass attrs for close UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconCloseAttrs",
          "description": "Use this props to pass attrs for close UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'close' })"
          }
        }
      ],
      "events": [
        {
          "name": "cancel"
        },
        {
          "name": "confirm"
        },
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "boolean"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "backdrop",
          "scoped": true,
          "description": "Use this slot to replace backdrop template.",
          "bindings": [
            {
              "name": "transitionBackdropAttrs",
              "title": "binding"
            },
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "backdropAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            }
          ]
        },
        {
          "name": "container",
          "scoped": true,
          "description": "Use this slot to replace container template.",
          "bindings": [
            {
              "name": "transitionDialogAttrs",
              "title": "binding"
            },
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "dialogAttrs",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "hasHeader",
              "title": "binding"
            },
            {
              "name": "titleSlotName",
              "title": "binding"
            },
            {
              "name": "titleTag",
              "title": "binding"
            },
            {
              "name": "titleAttrs",
              "title": "binding"
            },
            {
              "name": "titleText",
              "title": "binding"
            },
            {
              "name": "description",
              "title": "binding"
            },
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "confirmHandler",
              "title": "binding"
            },
            {
              "name": "cancelHandler",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            },
            {
              "name": "hasDescription",
              "title": "binding"
            },
            {
              "name": "textDescriptionAttrs",
              "title": "binding"
            },
            {
              "name": "isClosable",
              "title": "binding"
            },
            {
              "name": "hasActions",
              "title": "binding"
            },
            {
              "name": "hasConfirm",
              "title": "binding"
            },
            {
              "name": "buttonConfirmAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "hasCancel",
              "title": "binding"
            },
            {
              "name": "buttonCancelAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "header",
          "scoped": true,
          "description": "Use this slot to replace header template.",
          "bindings": [
            {
              "name": "hasHeader",
              "title": "binding"
            },
            {
              "name": "titleSlotName",
              "title": "binding"
            },
            {
              "name": "titleTag",
              "title": "binding"
            },
            {
              "name": "titleAttrs",
              "title": "binding"
            },
            {
              "name": "titleText",
              "title": "binding"
            },
            {
              "name": "description",
              "title": "binding"
            },
            {
              "name": "isClosable",
              "title": "binding"
            },
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "hasDescription",
              "title": "binding"
            },
            {
              "name": "textDescriptionAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "titleSlotName",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "titleTag",
              "title": "binding"
            },
            {
              "name": "titleAttrs",
              "title": "binding"
            },
            {
              "name": "titleText",
              "title": "binding"
            },
            {
              "name": "description",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "close",
          "scoped": true,
          "description": "Use this slot to replace close template.",
          "bindings": [
            {
              "name": "isClosable",
              "title": "binding"
            },
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon",
          "scoped": true,
          "bindings": [
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "description",
          "scoped": true,
          "description": "Use this slot to replace description template.",
          "bindings": [
            {
              "name": "hasDescription",
              "title": "binding"
            },
            {
              "name": "textDescriptionAttrs",
              "title": "binding"
            },
            {
              "name": "description",
              "title": "binding"
            }
          ]
        },
        {
          "name": "actions",
          "scoped": true,
          "description": "Use this slot to replace actions template.",
          "bindings": [
            {
              "name": "hasActions",
              "title": "binding"
            },
            {
              "name": "isClosable",
              "title": "binding"
            },
            {
              "name": "hasConfirm",
              "title": "binding"
            },
            {
              "name": "buttonConfirmAttrs",
              "title": "binding"
            },
            {
              "name": "confirmHandler",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "hasCancel",
              "title": "binding"
            },
            {
              "name": "buttonCancelAttrs",
              "title": "binding"
            },
            {
              "name": "cancelHandler",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "confirm",
          "scoped": true,
          "description": "Use this slot to replace confirm button template.",
          "bindings": [
            {
              "name": "hasConfirm",
              "title": "binding"
            },
            {
              "name": "attrs",
              "title": "binding"
            },
            {
              "name": "confirmHandler",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "cancel",
          "scoped": true,
          "description": "Use this slot to replace cancel button template.",
          "bindings": [
            {
              "name": "hasCancel",
              "title": "binding"
            },
            {
              "name": "attrs",
              "title": "binding"
            },
            {
              "name": "cancelHandler",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiModal/UiModal.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMenu",
      "description": "",
      "tags": {},
      "expose": [
        {
          "name": "menuItems"
        },
        {
          "name": "firstMenuItem"
        },
        {
          "name": "selectedMenuItem"
        }
      ],
      "props": [
        {
          "name": "items",
          "description": "Use this props to pass list of menu items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "TSParenthesizedType"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "enableKeyboardNavigation",
          "description": "Use this props to allow using arrows to navigation.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        }
      ],
      "events": [
        {
          "name": "itemsLoaded"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place menu items."
        },
        {
          "name": "name",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to place menu item content.",
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMenu/UiMenu.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiList",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to pass list tag.",
          "required": false,
          "type": {
            "name": "HTMLListTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'ul'"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass list items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "ListItem"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place list items"
        },
        {
          "name": "name",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to replace list item content",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiList/UiList.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiHorizontalPaging",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props to set active page item.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "Array",
                "elements": [
                  {
                    "name": "HorizontalPangingItemProps"
                  }
                ]
              },
              {
                "name": "HorizontalPangingItemProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "title",
          "description": "Use this props to set inside pages title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass inside pages items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "HorizontalPangingItemProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "hasHeader",
          "description": "Use this props to display inside pages header.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "buttonBackAttrs",
          "description": "Use this props to pass attrs for back UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconBackAttrs",
          "description": "Use this props to pass attrs for back button UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'chevron-left' })"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs for title UiHeading",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "menuAttrs",
          "description": "Use this props to pass attrs for title UiMenu",
          "required": false,
          "type": {
            "name": "MenuAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to pass labels inside component translation.",
          "required": false,
          "type": {
            "name": "HorizontalPagingTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ back: 'Back to' })"
          }
        },
        {
          "name": "menuTemplateRef",
          "description": "Use this props to pass menu template ref when you use menu slot.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "InstanceType",
                "elements": [
                  {
                    "name": "TSTypeQuery"
                  }
                ]
              },
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "null"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "Array"
            ],
            "elements": [
              {
                "name": "HorizontalPangingItemProps"
              }
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "header",
          "description": "Use this slot to replace header template."
        },
        {
          "name": "back-button",
          "scoped": true,
          "description": "Use this slot to replace back-button template.",
          "bindings": [
            {
              "name": "isActive",
              "title": "binding"
            },
            {
              "name": "buttonBackAttrs",
              "title": "binding"
            },
            {
              "name": "handleBackClick",
              "title": "binding"
            }
          ]
        },
        {
          "name": "title",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            }
          ]
        },
        {
          "name": "menu",
          "scoped": true,
          "description": "Use this slot to replace menu template.",
          "bindings": [
            {
              "name": "items",
              "title": "binding"
            },
            {
              "name": "isActive",
              "title": "binding"
            }
          ]
        },
        {
          "name": "name",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "description": "Use this slot to replace content template."
        },
        {
          "name": "default",
          "description": "Use this slot to place inside pages items."
        },
        {
          "name": "item.name",
          "scoped": true,
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiHorizontalPaging/UiHorizontalPaging.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepicker",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "DatepickerModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "invalid",
          "description": "Use this props to set invalid state of component.",
          "required": false,
          "type": {
            "name": "DatepickerInvalid"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "error",
          "description": "Use this props to set custom error message",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "boolean"
              },
              {
                "name": "string"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "order",
          "description": "Use this props to set input fields order",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "DatepickerDatePart"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([\n  'day',\n  'month',\n  'year',\n])"
          }
        },
        {
          "name": "touched",
          "description": "Use this props to touch component and show validation errors.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "lang",
          "description": "Use this props to set months language - default enUS",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "'en-us'"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to override labels inside component translation.",
          "required": false,
          "type": {
            "name": "DatepickerTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  day: 'day',\n  month: 'month',\n  year: 'year',\n  placeholderDay: 'DD',\n  placeholderMonth: 'MM',\n  placeholderYear: 'YYYY',\n  errorWrongDate: 'Please enter a valid date, e.g. 05/11/1990',\n  errorDateInFuture: 'Sorry, the date of birth cannot be a future date',\n  errorOutOfBounds: 'Sorry, our checkup only covers people between 0 and 120 years old',\n})"
          }
        },
        {
          "name": "minLimit",
          "description": "Use this props to set minimum age limit",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "maxLimit",
          "description": "Use this props to set maximum age limit",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "120"
          }
        },
        {
          "name": "alertAttrs",
          "description": "Use this props to pass attrs to UiAlert.",
          "required": false,
          "type": {
            "name": "AlertAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textDayAttrs",
          "description": "Use this props to pass attrs to day UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  tag: 'label',\n  for: 'datepicker-input-day',\n})"
          }
        },
        {
          "name": "textMonthAttrs",
          "description": "Use this props to pass attrs to month UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  tag: 'label',\n  for: 'datepicker-input-month',\n})"
          }
        },
        {
          "name": "textYearAttrs",
          "description": "Use this props to pass attrs to year UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  tag: 'label',\n  for: 'datepicker-input-year',\n})"
          }
        },
        {
          "name": "inputDayAttrs",
          "description": "Use this props to pass attrs to day UiInput.",
          "required": false,
          "type": {
            "name": "DatepickerDayInputAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ inputAttrs: { id: 'datepicker-input-day' } })"
          }
        },
        {
          "name": "inputMonthAttrs",
          "description": "Use this props to pass attrs to month UiInput.",
          "required": false,
          "type": {
            "name": "DatepickerMonthInputAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ inputAttrs: { id: 'datepicker-input-month' } })"
          }
        },
        {
          "name": "inputYearAttrs",
          "description": "Use this props to pass attrs to year UiInput.",
          "required": false,
          "type": {
            "name": "DatepickerYearInputAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ inputAttrs: { id: 'datepicker-input-year' } })"
          }
        },
        {
          "name": "datepickerCalendarAttrs",
          "description": "Use this props to pass attrs to UiDatepickerCalendar",
          "required": false,
          "type": {
            "name": "DatepickerCalendarAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "DatepickerModelValue"
            ]
          }
        },
        {
          "name": "update:invalid",
          "type": {
            "names": [
              "DatepickerInvalid"
            ]
          }
        },
        {
          "name": "calendar-open",
          "type": {
            "names": [
              "Event"
            ]
          }
        },
        {
          "name": "calendar-select",
          "type": {
            "names": [
              "Event"
            ]
          }
        },
        {
          "name": "field-insert",
          "type": {
            "names": [
              "{ field: DatepickerDatePart, value: string }"
            ]
          }
        },
        {
          "name": "field-error",
          "type": {
            "names": [
              "{ field: DatepickerDatePart, error?: string | boolean }"
            ]
          }
        },
        {
          "name": "field-focus",
          "type": {
            "names": [
              "{ field: DatepickerDatePart }"
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/UiDatepicker.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiControls",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "iconBackAttrs",
          "description": "Use this props to pass attrs for back UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'chevron-left' })"
          }
        },
        {
          "name": "buttonBackAttrs",
          "description": "Use this props to pass attrs for back UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ to: '' })"
          }
        },
        {
          "name": "buttonNextAttrs",
          "description": "Use this props to pass attrs for next UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to override labels inside component translation.",
          "required": false,
          "type": {
            "name": "ControlsTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  back: 'Back',\n  next: 'Next',\n})"
          }
        },
        {
          "name": "invalid",
          "description": "Use this props to set invalid state of the question.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "toNext",
          "description": "Use this props to set route to next screen.",
          "required": false,
          "type": {
            "name": "ControlsNavigation"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "toBack",
          "description": "Use this props to set route to back screen.",
          "required": false,
          "type": {
            "name": "ControlsNavigation"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "hideBackButton",
          "description": "Use this props to move the responsibility to move to the back screen to question content.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "hideNextButton",
          "description": "Use this props to move the responsibility to move to the next screen to question content.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "layout",
          "description": "Use this props to set direction of controls.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"horizontal\""
              },
              {
                "name": "\"vertical\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'horizontal'"
          }
        },
        {
          "name": "containerAttrs",
          "description": "Use this props to pass attrs to container element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "has-error"
        }
      ],
      "slots": [
        {
          "name": "name",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "container",
          "description": "Use this slot to replace container content."
        },
        {
          "name": "default",
          "description": "Use this slot to place container content."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiControls/UiControls.vue"
      ]
    },
    {
      "displayName": "UiContainer",
      "exportName": "default",
      "description": "",
      "tags": {},
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside container."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiContainer/UiContainer.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiCard",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to set title for card.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "subtitle",
          "description": "Use this props to set subtitle for card.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "description",
          "description": "Use this props to set description for card.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "type",
          "description": "Use this props to set icon type.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"emergency_ambulance\""
              },
              {
                "name": "\"emergency\""
              },
              {
                "name": "\"consultation_24\""
              },
              {
                "name": "\"consultation\""
              },
              {
                "name": "\"self_care\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'emergency_ambulance'"
          }
        },
        {
          "name": "iconTriageAttrs",
          "description": "Use this props to pass attrs for UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textSubtitleAttrs",
          "description": "Use this props to pass attrs for subtitle UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs for title UiHeading.",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textDescriptionAttrs",
          "description": "Use this props to pass attrs for description UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "triage",
          "scoped": true,
          "description": "Use this slot to replace triage template.",
          "bindings": [
            {
              "name": "iconTriageAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace content template.",
          "bindings": [
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "description",
              "title": "binding"
            },
            {
              "name": "textDescriptionAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "subtitle",
          "scoped": true,
          "description": "Use this slot to replace subtitle template.",
          "bindings": [
            {
              "name": "subtitle",
              "title": "binding"
            },
            {
              "name": "textSubtitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "title",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "description",
          "scoped": true,
          "description": "Use this slot to replace description template.",
          "bindings": [
            {
              "name": "description",
              "title": "binding"
            },
            {
              "name": "textDescriptionAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "details",
          "description": "Use this slot to place content bottom of card."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiCard/UiCard.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiAccordion",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set opened items.",
          "required": false,
          "type": {
            "name": "AccordionModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass accordion items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "TSParenthesizedType"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "AccordionModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place accordion items."
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to replace accordion item content.",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiAccordion/UiAccordion.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiToggleButtonGroup",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "number"
              },
              {
                "name": "string"
              },
              {
                "name": "Record",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "unknown"
                  }
                ]
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "deselectable",
          "description": "Use this prop to set to allow deselecting selected value.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass list of toggle buttons.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "ToggleButtonRenderItem"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "TSIndexedAccessType"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside component."
        },
        {
          "name": "item.name",
          "scoped": true,
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiToggleButtonGroup/UiToggleButtonGroup.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiTile",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "TileModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "value",
          "description": "Use this props to set value of radio.",
          "required": false,
          "type": {
            "name": "TileModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set tile id\nDefault value is generated by uid i.e. `tile-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "icon",
          "description": "Use this props to set icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "iconAttrs",
          "description": "Use this props to pass attrs for UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textLabelAttrs",
          "description": "Use this props to pass attrs for label UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "TileModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "icon",
          "scoped": true,
          "description": "Use this slot to replace icon template.",
          "bindings": [
            {
              "name": "iconAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "textLabelAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside label."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiTile/UiTile.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiSwitch",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "CheckboxModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "controlAttrs",
          "description": "Use this props to set pass attrs for UiSwitchControl.",
          "required": false,
          "type": {
            "name": "SwitchControlAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "CheckboxModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "slot",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "switchcontrol",
          "scoped": true,
          "description": "Use this slot to replace switch control template.",
          "bindings": [
            {
              "name": "checked",
              "title": "binding"
            },
            {
              "name": "controlAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiSwitch/UiSwitch.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiStepper",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "steps",
          "description": "Use this props to set the steps in the stepper.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "StepperStepAttrsProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => [ { label: '' } ]"
          }
        },
        {
          "name": "currentStep",
          "description": "Use this props to set the current step in the stepper.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "slots": [
        {
          "name": "items",
          "scoped": true,
          "description": "Use this slot to replace items template.",
          "bindings": [
            {
              "name": "steps",
              "title": "binding"
            },
            {
              "name": "activeStepIndex",
              "title": "binding"
            },
            {
              "name": "stepperStepAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "item",
          "scoped": true,
          "description": "Use this slot to replace item in the desktop list",
          "bindings": [
            {
              "name": "step",
              "title": "binding"
            },
            {
              "name": "index",
              "title": "binding"
            },
            {
              "name": "activeStepIndex",
              "title": "binding"
            },
            {
              "name": "stepperStepAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "item-link",
          "scoped": true,
          "bindings": []
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiStepper/UiStepper.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiScale",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "ScaleValue"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set scale name.\nDefault value is generated by uid i.e. `scale-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "steps",
          "description": "Use this props to set max value",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "10"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to override labels inside component translation.",
          "required": false,
          "type": {
            "name": "ScaleTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  label: 'Pain scale',\n  min: 'Mild',\n  max: 'Unbearable',\n})"
          }
        },
        {
          "name": "tag",
          "description": "Use this props to set scale tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'fieldset'"
          }
        },
        {
          "name": "legend",
          "description": "Use this props to set legend.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "radioOptionAttrs",
          "description": "Use this props to pass attrs for option UiRadio.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "RadioAttrsProps"
              },
              {
                "name": "Array",
                "elements": [
                  {
                    "name": "RadioAttrsProps"
                  }
                ]
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "textMinAttrs",
          "description": "USe this props to pass attrs for min UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textMaxAttrs",
          "description": "USe this props to pass attrs for max UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "numberStepperAttrs",
          "description": "USe this props to pass attrs for UiNumberStepper.",
          "required": false,
          "type": {
            "name": "NumberStepperAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "ScaleValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "legend",
          "scoped": true,
          "description": "Use this slot to replace legend template.",
          "bindings": [
            {
              "name": "legend",
              "title": "binding"
            }
          ]
        },
        {
          "name": "description",
          "scoped": true,
          "description": "Use this slot to replace description template.",
          "bindings": [
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "textMinAttrs",
              "title": "binding"
            },
            {
              "name": "textMaxAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "min",
          "scoped": true,
          "description": "Use this slot to replace min template.",
          "bindings": [
            {
              "name": "textMinAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "max",
          "scoped": true,
          "description": "Use this slot to replace max template.",
          "bindings": [
            {
              "name": "textMaxAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "mobile-controls",
          "scoped": true,
          "description": "Use this slot to replace mobile controls template.",
          "bindings": [
            {
              "name": "numberStepperAttrs",
              "title": "binding"
            },
            {
              "name": "scaleValue",
              "title": "binding"
            },
            {
              "name": "steps",
              "title": "binding"
            },
            {
              "name": "max",
              "title": "binding"
            },
            {
              "name": "changeHandler",
              "title": "binding"
            }
          ]
        },
        {
          "name": "slotName",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiScale/UiScale.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiRating",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props to set current rate.",
          "required": false,
          "type": {
            "name": "RatingValue"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "max",
          "description": "Use this props to set max rate",
          "required": false,
          "type": {
            "name": "RatingValue"
          },
          "defaultValue": {
            "func": false,
            "value": "1"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set rating name.\nDefault value is generated by uid i.e. `rating-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "settings",
          "description": "Use this props to setup item component.",
          "required": false,
          "type": {
            "name": "RatingSettings"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  iconDefault: 'star-outlined',\n  iconActive: 'star-filled',\n})"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to override labels inside component translation.",
          "required": false,
          "type": {
            "name": "RatingTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ })"
          }
        },
        {
          "name": "tag",
          "description": "Use this props to set rating tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'fieldset'"
          }
        },
        {
          "name": "disabled",
          "description": "Use this props to disabled input.\nRemember to use `ui-rating--is-disabled` class to style disabled rating.",
          "required": false,
          "type": {
            "name": "boolean"
          }
        },
        {
          "name": "legend",
          "description": "Use this props to set legend.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "radioOptionAttrs",
          "description": "Use this props to pass attrs for option UiRadio.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "RatingRadioAttrsProps"
              },
              {
                "name": "Array",
                "elements": [
                  {
                    "name": "RatingRadioAttrsProps"
                  }
                ]
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "legend",
          "scoped": true,
          "description": "Use this slot to replace legend template.",
          "bindings": [
            {
              "name": "legend",
              "title": "binding"
            }
          ]
        },
        {
          "name": "option",
          "scoped": true,
          "description": "Use this slot to replace option template.",
          "bindings": [
            {
              "name": "index",
              "title": "binding"
            },
            {
              "name": "rate",
              "title": "binding"
            },
            {
              "name": "ratingName",
              "title": "binding"
            },
            {
              "name": "hoverHandler",
              "title": "binding"
            },
            {
              "name": "finalScore",
              "title": "binding"
            },
            {
              "name": "settings",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon",
          "scoped": true,
          "description": "Use this slot to replace rating icon.",
          "bindings": [
            {
              "name": "index",
              "title": "binding"
            },
            {
              "name": "finalScore",
              "title": "binding"
            },
            {
              "name": "iconActiveAttrs",
              "title": "binding"
            },
            {
              "name": "iconDefaultAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon-active",
          "scoped": true,
          "description": "Use this slot to replace active rating icon.",
          "bindings": [
            {
              "name": "iconActiveAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon-default",
          "scoped": true,
          "description": "Use this slot to replace default rating icon.",
          "bindings": [
            {
              "name": "iconDefaultAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiRating/UiRating.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiProgressbar",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "steps",
          "description": "Use this props to set steps.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "currentStep",
          "description": "Use this props to set current step.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "label",
          "description": "Use this props to set label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "progressAttrs",
          "description": "Use this props to pass attrs for UiProgress",
          "required": false,
          "type": {
            "name": "ProgressAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "label",
          "scoped": true,
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            },
            {
              "name": "steps",
              "title": "binding"
            },
            {
              "name": "currentStep",
              "title": "binding"
            }
          ]
        },
        {
          "name": "progress",
          "scoped": true,
          "bindings": [
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "stepsDots",
              "title": "binding"
            },
            {
              "name": "steps",
              "title": "binding"
            },
            {
              "name": "currentStep",
              "title": "binding"
            },
            {
              "name": "progressAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiProgressbar/UiProgressbar.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiPopover",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to pass title for popover.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "headingTitleAttrs",
          "description": "Use this props to pass attrs to title UiHeading.",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  level: '4',\n  tag: 'span',\n})"
          }
        },
        {
          "name": "buttonCloseAttrs",
          "description": "Use this props to pass attrs to close UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconCloseAttrs",
          "description": "Use this props to pass attrs to close UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'clear' })"
          }
        }
      ],
      "events": [
        {
          "name": "close"
        }
      ],
      "slots": [
        {
          "name": "header",
          "scoped": true,
          "description": "Use this slot to replace header template.",
          "bindings": [
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "clickHandler",
              "title": "binding"
            }
          ]
        },
        {
          "name": "title",
          "scoped": true,
          "description": "Use this slot to replace title template.",
          "bindings": [
            {
              "name": "headingTitleAttrs",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            }
          ]
        },
        {
          "name": "close",
          "scoped": true,
          "description": "Use this slot to replace close template.",
          "bindings": [
            {
              "name": "buttonCloseAttrs",
              "title": "binding"
            },
            {
              "name": "clickHandler",
              "title": "binding"
            },
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon",
          "scoped": true,
          "description": "Use this slot to replace icon template.",
          "bindings": [
            {
              "name": "iconCloseAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this to put content inside component."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiPopover/UiPopover.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiPhoneNumber",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "id",
          "description": "Use this props to set input id and label for\nDefault value is generated by uid i.e. `input-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "modelValue",
          "description": "Use this props to set default prefix phone code and phone number.",
          "required": false,
          "type": {
            "name": "{\n prefix?: PhoneCodeType,\n phoneNumber?: string,\n}"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  prefix: {\n    code: '+1',\n    countryCode: 'US',\n    country: 'United States of America',\n  },\n  phoneNumber: '',\n})"
          }
        },
        {
          "name": "placeholder",
          "description": "Use this props to set input placeholder.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "'Enter phone number'"
          }
        },
        {
          "name": "languageData",
          "description": "Use this props to set phone number prefix default language.",
          "required": false,
          "type": {
            "name": "{\n country: SupportedCountryCodeType,\n language: string,\n}"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  country: 'us',\n  language: 'en',\n})"
          }
        },
        {
          "name": "hasError",
          "description": "Use this props to set alert message.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "countryCodes",
          "description": "Use this props to set country code items.",
          "required": false,
          "type": {
            "name": "CountryCodes"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue"
        }
      ],
      "slots": [
        {
          "name": "prefix",
          "scoped": true,
          "description": "Use this slot to replace phone number prefix template.",
          "bindings": [
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "languageData",
              "title": "binding"
            }
          ]
        },
        {
          "name": "input",
          "scoped": true,
          "description": "Use this slot to replace phone number input template.",
          "bindings": [
            {
              "name": "inputId",
              "title": "binding"
            },
            {
              "name": "modelValue",
              "title": "binding"
            },
            {
              "name": "placeholder",
              "title": "binding"
            },
            {
              "name": "hasError",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiPhoneNumber/UiPhoneNumber.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiNumberStepper",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "NumberStepperModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "min",
          "description": "Use this props to set min value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "max",
          "description": "Use this props to set max value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "1"
          }
        },
        {
          "name": "step",
          "description": "Use this props to set step value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "1"
          }
        },
        {
          "name": "hasControls",
          "description": "Use this props to hide controls.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "buttonDecrementAttrs",
          "description": "Use this props to pass attrs for decrement UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  'aria-hidden': true,\n  tabindex: -1,\n})"
          }
        },
        {
          "name": "iconDecrementAttrs",
          "description": "Use this props to pass attrs for decrement UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'minus' })"
          }
        },
        {
          "name": "buttonIncrementAttrs",
          "description": "Use this props to pass attrs for increment UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  'aria-hidden': true,\n  tabindex: -1,\n})"
          }
        },
        {
          "name": "iconIncrementAttrs",
          "description": "Use this props to pass attrs for increment UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'plus' })"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "NumberStepperModelValue"
            ]
          },
          "description": "Update UiNumberStepper value"
        },
        {
          "name": "error:value",
          "type": {
            "names": [
              "{isMin: boolean, isMax: boolean}"
            ]
          },
          "description": "Emit when value of UiNumberStepper has error"
        }
      ],
      "slots": [
        {
          "name": "default",
          "scoped": true,
          "description": "Use this slot to place content inside number stepper.",
          "bindings": [
            {
              "name": "change",
              "title": "binding"
            },
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "min",
              "title": "binding"
            },
            {
              "name": "max",
              "title": "binding"
            },
            {
              "name": "step",
              "title": "binding"
            }
          ]
        },
        {
          "name": "decrement",
          "scoped": true,
          "description": "Use this slot to replace decrement template.",
          "bindings": [
            {
              "name": "hasControls",
              "title": "binding"
            },
            {
              "name": "buttonDecrementAttrs",
              "title": "binding"
            },
            {
              "name": "isMin",
              "title": "binding"
            },
            {
              "name": "decrement",
              "title": "binding"
            },
            {
              "name": "iconDecrementAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "increment",
          "scoped": true,
          "description": "Use this slot to replace increment template.",
          "bindings": [
            {
              "name": "hasControls",
              "title": "binding"
            },
            {
              "name": "buttonIncrementAttrs",
              "title": "binding"
            },
            {
              "name": "isMax",
              "title": "binding"
            },
            {
              "name": "increment",
              "title": "binding"
            },
            {
              "name": "iconIncrementAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiNumberStepper/UiNumberStepper.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiNotification",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "type",
          "description": "Use this props to set notification type.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"success\""
              },
              {
                "name": "\"info\""
              },
              {
                "name": "\"warning\""
              },
              {
                "name": "\"error\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'error'"
          }
        },
        {
          "name": "hasIcon",
          "description": "Use this props to hide icon.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to pass labels inside component translation.",
          "required": false,
          "type": {
            "name": "NotificationTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ action: 'Action' })"
          }
        },
        {
          "name": "buttonActionAttrs",
          "description": "Use this props to pass attrs for action UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconActionAttrs",
          "description": "Use this props to pass attrs for action UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'chevron-right' })"
          }
        }
      ],
      "slots": [
        {
          "name": "icon",
          "description": "Use this slot to replace icon template."
        },
        {
          "name": "message",
          "scoped": true,
          "description": "Use this slot to replace message template.",
          "bindings": [
            {
              "name": "textMessageAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "text",
          "scoped": true,
          "description": "Use this slot to replace text template.",
          "bindings": [
            {
              "name": "textMessageAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place text inside alert."
        },
        {
          "name": "action",
          "scoped": true,
          "description": "Use this slot to replace action template.",
          "bindings": [
            {
              "name": "buttonActionAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            },
            {
              "name": "hasAction",
              "title": "binding"
            },
            {
              "name": "iconActionAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiNotification/UiNotification.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiNavigation",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "items",
          "description": "Use this props to pass list of navigation items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "NavigationRenderItem"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside component."
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to replace navigation item content.",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiNavigation/UiNavigation.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiLoader",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "isLoading",
          "description": "Use this props to show UiLoader component",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "type",
          "description": "Use this props to select UiLoader variant",
          "required": false,
          "type": {
            "name": "LoaderType"
          },
          "defaultValue": {
            "func": false,
            "value": "'spinner'"
          }
        },
        {
          "name": "transitionType",
          "description": "Use this props to set transition type.",
          "required": false,
          "type": {
            "name": "LoaderTransitionType"
          },
          "defaultValue": {
            "func": false,
            "value": "'if'"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set transition name.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "'fade'"
          }
        },
        {
          "name": "tag",
          "description": "Use this props to pass tag of loader",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'div'"
          }
        },
        {
          "name": "transitionAttrs",
          "description": "Use this props to pas transition name",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "LoaderNativeTransitionAttrsProps"
              },
              {
                "name": "LoaderTransitionAttrsProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "loaderAttrs",
          "description": "Use this props to pass attributes to internal child components",
          "required": false,
          "type": {
            "name": "LoaderItemAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "loader",
          "description": "Use this slot to replace loader."
        },
        {
          "name": "loader-blocks",
          "description": "Use this slot to place loader blocks."
        },
        {
          "name": "default",
          "description": "Use this slot to place loaded content."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/UiLoader.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiInteractiveSvg",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "elementsAttrs",
          "description": "Use this props to pass function that returns attrs for UiInteractiveSvgElements",
          "required": false,
          "type": {
            "name": "InteractiveSvgFunc"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place svg elements."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiInteractiveSvg/UiInteractiveSvg.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiHeader",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to pass attrs for logo button",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "logo",
          "description": "Use this prop to set the logo.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "Icon"
              },
              {
                "name": "boolean"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "hamburgerMatchMedia",
          "description": "Use this props to pass media query for hamburger display",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "breakpoints.toMobile"
          }
        },
        {
          "name": "navigation",
          "description": "Use this props to pass list of navigation items.",
          "required": false,
          "type": {
            "name": "TSIndexedAccessType"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "buttonBrandAttrs",
          "description": "Use this props to pass attrs for brand button",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonHamburgerAttrs",
          "description": "Use this props to pass attrs for hamburger UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconHamburgerAttrs",
          "description": "Use this props to pass attrs for hamburger UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'menu' })"
          }
        },
        {
          "name": "iconLogoAttrs",
          "description": "Use this props to pass attrs for logo UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "navigationAttrs",
          "description": "Use this props to pass attrs for UiNavigation.",
          "required": false,
          "type": {
            "name": "NavigationAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "brand",
          "scoped": true,
          "description": "Use this slot to replace brand template.",
          "bindings": [
            {
              "name": "buttonBrandAttrs",
              "title": "binding"
            },
            {
              "name": "iconLogoAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "logo",
          "scoped": true,
          "description": "Use this slot to replace logo template.",
          "bindings": [
            {
              "name": "iconLogoAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "hamburger",
          "scoped": true,
          "description": "Use this slot to replace hamburger template.",
          "bindings": [
            {
              "name": "buttonHamburgerAttrs",
              "title": "binding"
            },
            {
              "name": "iconHamburgerAttrs",
              "title": "binding"
            },
            {
              "name": "handleHamburger",
              "title": "binding"
            }
          ]
        },
        {
          "name": "navigation",
          "scoped": true,
          "description": "Use this slot to replace navigation template.",
          "bindings": [
            {
              "name": "navigationAttrs",
              "title": "binding"
            },
            {
              "name": "navigation",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiHeader/UiHeader.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiFormField",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "message",
          "description": "Use this props to set label text",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "boolean"
              },
              {
                "name": "string"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set input id and label for\nDefault value is generated by uid i.e. `input-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "hint",
          "description": "Use this props to set label hint like \"Required\" or \"Optional\"",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "boolean"
              },
              {
                "name": "string"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "value",
          "description": "Use this props to pass value of input.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "hasCharacterCounter",
          "description": "Use this props to show character counter.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "errorMessage",
          "description": "Use this props to set alert message",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "boolean"
              },
              {
                "name": "string"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "textMessageAttrs",
          "description": "Use this props to pass attrs to message UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        },
        {
          "name": "textHintAttrs",
          "description": "Use this props to pass attrs to hint UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        },
        {
          "name": "alertAttrs",
          "description": "Use this props to pass attrs to UiAlert.",
          "required": false,
          "type": {
            "name": "AlertAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "characterCounterAttrs",
          "required": false,
          "type": {
            "name": "FormFieldCharacterCounterProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  value: '',\n  max: 240,\n})"
          }
        }
      ],
      "events": [
        {
          "name": "error",
          "type": {
            "names": [
              "union"
            ],
            "elements": [
              {
                "name": "string"
              },
              {
                "name": "null"
              }
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "message",
              "title": "binding"
            },
            {
              "name": "hint",
              "title": "binding"
            },
            {
              "name": "hasHint",
              "title": "binding"
            },
            {
              "name": "id",
              "title": "binding"
            },
            {
              "name": "textMessageAttrs",
              "title": "binding"
            },
            {
              "name": "textHintAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "message",
          "scoped": true,
          "description": "Use this slot to replace message template.",
          "bindings": [
            {
              "name": "message",
              "title": "binding"
            },
            {
              "name": "textMessageAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "hint",
          "scoped": true,
          "description": "Use this slot to replace hint template.",
          "bindings": [
            {
              "name": "hasHint",
              "title": "binding"
            },
            {
              "name": "hint",
              "title": "binding"
            },
            {
              "name": "textHintAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "scoped": true,
          "description": "Use this slot to place input.",
          "bindings": [
            {
              "name": "id",
              "title": "binding"
            }
          ]
        },
        {
          "name": "alert",
          "scoped": true,
          "description": "Use this slot to replace alert template.",
          "bindings": [
            {
              "name": "alertAttrs",
              "title": "binding"
            },
            {
              "name": "hasErrorMessage",
              "title": "binding"
            },
            {
              "name": "errorMessage",
              "title": "binding"
            }
          ]
        },
        {
          "name": "character-counter",
          "scoped": true,
          "description": "Use this slot to replace alert template.",
          "bindings": [
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "characterCounterAttrs",
              "title": "binding"
            },
            {
              "name": "hasCharacterCounter",
              "title": "binding"
            },
            {
              "name": "handleErrorEmit",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiFormField/UiFormField.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDropdown",
      "description": "",
      "tags": {},
      "expose": [
        {
          "name": "isOpen"
        },
        {
          "name": "closeHandler"
        }
      ],
      "props": [
        {
          "name": "text",
          "description": "Use this props to set text on toggle button.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set dropdown name.\nDefault value is generated by uid i.e. `dropdown-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "DropdownModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "closeOnClickOutside",
          "description": "Use this props to allow clicking outside to close dropdown.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "toggleElement",
          "description": "Use this props to set toggle DOM element to back to it after close popover.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "ComponentPublicInstance"
              },
              {
                "name": "HTMLElement"
              },
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "undefined"
          }
        },
        {
          "name": "enableKeyboardNavigation",
          "description": "Use this props to allow using key navigation.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "items",
          "description": "Use this props to pass list of dropdown items.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "DropdownItem"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "buttonToggleAttrs",
          "description": "Use this props to pass attrs to toggle UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "popoverAttrs",
          "description": "Use this props to pass attrs to UiPopover.",
          "required": false,
          "type": {
            "name": "PopoverAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "DropdownModelValue"
            ]
          }
        },
        {
          "name": "open"
        },
        {
          "name": "close"
        }
      ],
      "slots": [
        {
          "name": "toggle",
          "scoped": true,
          "description": "Use this slot to place toggle template.",
          "bindings": [
            {
              "name": "toggleHandler",
              "title": "binding"
            },
            {
              "name": "openHandler",
              "title": "binding"
            },
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "isOpen",
              "title": "binding"
            },
            {
              "name": "text",
              "title": "binding"
            },
            {
              "name": "buttonToggleAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "popover",
          "scoped": true,
          "description": "Use this slot to replace popover template.",
          "bindings": [
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "isOpen",
              "title": "binding"
            },
            {
              "name": "popoverAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace content template.",
          "bindings": [
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "isOpen",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "scoped": true,
          "description": "Use this slot to place dropdown content inside dropdown.",
          "bindings": [
            {
              "name": "closeHandler",
              "title": "binding"
            },
            {
              "name": "isOpen",
              "title": "binding"
            }
          ]
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to replace dropdown item content.",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiDropdown/UiDropdown.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiChip",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "textLabelAttrs",
          "description": "Use this props to pass attrs for remove UiButton",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonRemoveAttrs",
          "description": "Use this props to pass attrs for remove UiButton",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconRemoveAttrs",
          "description": "Use this props to pass attrs for remove UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'remove-filled' })"
          }
        }
      ],
      "events": [
        {
          "name": "remove"
        }
      ],
      "slots": [
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "textLabelAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default"
        },
        {
          "name": "remove",
          "scoped": true,
          "description": "Use this slot to replace remove template.",
          "bindings": [
            {
              "name": "buttonRemoveAttrs",
              "title": "binding"
            },
            {
              "name": "clickHandler",
              "title": "binding"
            },
            {
              "name": "iconRemoveAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon",
          "scoped": true,
          "bindings": [
            {
              "name": "iconRemoveAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiChip/UiChip.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiBulletPoints",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to set list tag.",
          "required": false,
          "type": {
            "name": "HTMLListTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'ul'"
          }
        },
        {
          "name": "type",
          "description": "Use this props to set list type.",
          "required": false,
          "type": {
            "name": "BulletPointsType"
          },
          "defaultValue": {
            "func": false,
            "value": "'1'"
          }
        },
        {
          "name": "items",
          "description": "Use this props to set list of bullet points.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "BulletPointsItem"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "icon",
          "description": "Use this props to set the bullet point icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "'bullet-common'"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place bullet points items"
        },
        {
          "name": "item.name",
          "scoped": true,
          "description": "Use this slot to replace bullet point item content.",
          "bindings": [
            {
              "name": "item",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiBulletPoints/UiBulletPoints.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiAlert",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "type",
          "description": "Use this props to set alert type.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"success\""
              },
              {
                "name": "\"info\""
              },
              {
                "name": "\"warning\""
              },
              {
                "name": "\"error\""
              },
              {
                "name": "\"default\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'error'"
          }
        },
        {
          "name": "hasIcon",
          "description": "Use this props to hide icon.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "iconAlertAttrs",
          "description": "Use this props to pass attrs for UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textMessageAttrs",
          "description": "Use this props to pass attrs for message UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "icon",
          "scoped": true,
          "description": "Use this slot to replace icon template.",
          "bindings": [
            {
              "name": "iconAlertAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "message",
          "scoped": true,
          "description": "Use this slot to replace message template.",
          "bindings": [
            {
              "name": "textMessageAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place message inside alert."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiAlert/UiAlert.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiTextarea",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "TextareaModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "resize",
          "description": "Use this props to enable resizing on textarea.\ntrue - both direction resizing, false - disable resizing,\n'horizontal' - horizontal resizing only, 'vertical' - vertical resizing only",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "boolean"
              },
              {
                "name": "\"horizontal\""
              },
              {
                "name": "\"vertical\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "placeholder",
          "description": "Use this props to set input placeholder.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "disabled",
          "description": "Use this props to disabled textarea.\nRemember to use `ui-textarea--is-disabled` class to style disabled textarea.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "hasAutogrowing",
          "description": "Use this props to allow to textarea autogrowing.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "textareaAttrs",
          "description": "Use this props to pass attrs for textarea element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "TextareaHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "TextareaModelValue"
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiTextarea/UiTextarea.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiText",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this to set text tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'p'"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside text"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiText/UiText.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiRange",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "min",
          "description": "Use this props to set min value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "max",
          "description": "Use this props to set max value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "1"
          }
        },
        {
          "name": "step",
          "description": "Use this props to set step value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "1"
          }
        },
        {
          "name": "headingValueAttrs",
          "description": "Use this props to pass attrs for value UiHeading",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  level: 1,\n  tag: 'span',\n})"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs for input element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "InputHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "RangeModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "name",
          "scoped": true,
          "bindings": [
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "value",
          "scoped": true,
          "description": "Use this slot to replace value template.",
          "bindings": [
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "headingValueAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "range",
          "scoped": true,
          "description": "Use this slot to replace range template. -",
          "bindings": [
            {
              "name": "inputAttrs",
              "title": "binding"
            },
            {
              "name": "min",
              "title": "binding"
            },
            {
              "name": "max",
              "title": "binding"
            },
            {
              "name": "change",
              "title": "binding"
            },
            {
              "name": "value",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiRange/UiRange.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiRadio",
      "description": "",
      "tags": {},
      "expose": [
        {
          "name": "input"
        }
      ],
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "RadioModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "value",
          "description": "Use this props to set value of radio.",
          "required": false,
          "type": {
            "name": "RadioModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set radio id\nDefault value is generated by uid i.e. `radio-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "disabled",
          "description": "Use this props to disabled input.\nRemember to use `ui-radio--is-disabled` class to style disabled radio.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs for input element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "InputHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "radioElementAttrs",
          "description": "Use this props to pass attrs for radio element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "HTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textLabelAttrs",
          "description": "Use this props to pass attrs for label UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "RadioModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "radio",
          "scoped": true,
          "description": "Use this slot to replace radiobutton template.",
          "bindings": [
            {
              "name": "checked",
              "title": "binding"
            },
            {
              "name": "radioElementAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "hasLabel",
              "title": "binding"
            },
            {
              "name": "textLabelAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside label."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiRadio/UiRadio.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiProgress",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "value",
          "description": "Use this props to set the progress value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "min",
          "description": "Use this props to set the minimum value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "max",
          "description": "Use this props to set the maximum value.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "100"
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiProgress/UiProgress.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiLink",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to set tag when a component shouldn't be a link.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'span'"
          }
        },
        {
          "name": "to",
          "description": "Use this props to set route for internal link.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "string"
              },
              {
                "name": "Record",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "unknown"
                  }
                ]
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "href",
          "description": "Use this props to set route for external link.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside link."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiLink/UiLink.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiInput",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "placeholder",
          "description": "Use this props to set input placeholder.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "type",
          "description": "Use this props to set input type.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "'text'"
          }
        },
        {
          "name": "disabled",
          "description": "Use this props to disabled input.\nRemember to use `ui-input--is-disabled` class to style disabled input.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "InputModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "suffix",
          "description": "Use this props to set suffix.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "outlineAttrs",
          "description": "Use this props to pass attrs for outline element.",
          "required": false,
          "type": {
            "name": "HTMLAttributes"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textSuffixAttrs",
          "description": "Use this props to pass attrs for suffix UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs for input element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "InputProps"
              },
              {
                "name": "InputHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "InputModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "input",
          "scoped": true,
          "description": "Use this slot to replace input template.",
          "bindings": [
            {
              "name": "inputAttrs",
              "title": "binding"
            },
            {
              "name": "input",
              "title": "binding"
            },
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "validation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "aside",
          "scoped": true,
          "description": "Use this slot to place aside element.",
          "bindings": [
            {
              "name": "suffix",
              "title": "binding"
            },
            {
              "name": "textSuffixAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiInput/UiInput.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiIcon",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "icon",
          "description": "Use this prop to set the icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiIcon/UiIcon.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiHeading",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "level",
          "description": "Use this props to set heading HeadingLevel from 1-6",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"1\""
              },
              {
                "name": "\"2\""
              },
              {
                "name": "\"3\""
              },
              {
                "name": "\"4\""
              },
              {
                "name": "\"5\""
              },
              {
                "name": "\"6\""
              },
              {
                "name": "1"
              },
              {
                "name": "2"
              },
              {
                "name": "3"
              },
              {
                "name": "4"
              },
              {
                "name": "5"
              },
              {
                "name": "6"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'1'"
          }
        },
        {
          "name": "tag",
          "description": "Use this props to set heading HTML HeadingTag",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "undefined"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside heading"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiHeading/UiHeading.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiCheckbox",
      "description": "",
      "tags": {},
      "expose": [
        {
          "name": "input"
        }
      ],
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "CheckboxModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "value",
          "description": "Use this props to set value of checkbox.\nRequired for multiple checkboxes.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "string"
              },
              {
                "name": "Record",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "unknown"
                  }
                ]
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set checkbox id.\nDefault value is generated by uid i.e. `checkbox-<uid>`.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "disabled",
          "description": "Use this props to disabled checkbox.\nRemember to use `ui-checkbox--is-disabled` class to style disabled checkbox.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs for input element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "InputHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconCheckmarkAttrs",
          "description": "Use this props to pass attrs for checkmark UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'checkmark' })"
          }
        },
        {
          "name": "textLabelAttrs",
          "description": "Use this props to pass attrs for label UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "CheckboxModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "checkbox",
          "scoped": true,
          "description": "Use this slot to replace checkbox template.",
          "bindings": [
            {
              "name": "checked",
              "title": "binding"
            },
            {
              "name": "iconCheckmarkAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "checkmark",
          "scoped": true,
          "description": "Use this slot to replace checkmark template.",
          "bindings": [
            {
              "name": "iconCheckmarkAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "hasLabel",
              "title": "binding"
            },
            {
              "name": "textLabelAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside label."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiCheckbox/UiCheckbox.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiButton",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to set tag when a component shouldn't be a button.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'button'"
          }
        },
        {
          "name": "to",
          "description": "Use this props to set route for internal link.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "string"
              },
              {
                "name": "Record",
                "elements": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "unknown"
                  }
                ]
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "href",
          "description": "Use this props to set route for external link.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "isLoading",
          "description": "Use this props to set button into loading state.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "loaderAttrs",
          "description": "Use this props to pass attrs for UiLoader.",
          "required": false,
          "type": {
            "name": "LoaderAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "loader",
          "description": "Use this slot to replace loader."
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside button."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiButton/UiButton.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiBackdrop",
      "description": "",
      "tags": {},
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/atoms/UiBackdrop/UiBackdrop.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiTabsItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to set item title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set item name, it used to toggle.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "buttonTabAttrs",
          "description": "Use this props to pass attrs for toggle UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "contentAttrs",
          "description": "Use this props to pass attrs for content element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "tab",
          "scoped": true,
          "description": "Use this slot to replace tab template.",
          "bindings": [
            {
              "name": "id",
              "title": "binding"
            },
            {
              "name": "isActive",
              "title": "binding"
            },
            {
              "name": "buttonTabAttrs",
              "title": "binding"
            },
            {
              "name": "contentAttrs",
              "title": "binding"
            },
            {
              "name": "handleTabActive",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            }
          ]
        },
        {
          "name": "tab-button",
          "scoped": true,
          "description": "Use this slot to replace tab-button template.",
          "bindings": [
            {
              "name": "id",
              "title": "binding"
            },
            {
              "name": "isActive",
              "title": "binding"
            },
            {
              "name": "buttonTabAttrs",
              "title": "binding"
            },
            {
              "name": "handleTabActive",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace content template.",
          "bindings": [
            {
              "name": "isActive",
              "title": "binding"
            },
            {
              "name": "contentAttrs",
              "title": "binding"
            },
            {
              "name": "id",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiTabs/_internal/UiTabsItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMultipleChoicesItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to set multiple choices item tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'fieldset'"
          }
        },
        {
          "name": "label",
          "description": "Use this props to set multiple choices item label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "invalid",
          "description": "Use this props to set invalid state of choice item.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "MultipleChoicesModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set item of item.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to pass labels inside component translation.",
          "required": false,
          "type": {
            "name": "MultipleChoicesItemTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  info: 'What does it mean?',\n  invalid: 'Please select one answer',\n})"
          }
        },
        {
          "name": "options",
          "description": "Use this props to pass options.",
          "required": false,
          "type": {
            "name": "Array",
            "elements": [
              {
                "name": "MultipleChoicesOption"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "alertAttrs",
          "description": "Use this props to pass attrs for hint UiAlert",
          "required": false,
          "type": {
            "name": "AlertAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonInfoAttrs",
          "description": "Use this props to pass attrs for info UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "labelInfoAttrs",
          "description": "Use this props to pass attrs for info label element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconInfoAttrs",
          "description": "Use this props to pass attrs for info UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'info' })"
          }
        },
        {
          "name": "headingLabelAttrs",
          "description": "Use this props to pass attrs for label UiText.",
          "required": false,
          "type": {
            "name": "HeadingAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ level: 2 })"
          }
        },
        {
          "name": "listItemAttrs",
          "description": "Use this props to pass attrs for list item.",
          "required": false,
          "type": {
            "name": "ListItemAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ class: 'ui-multiple-choices-item' })"
          }
        },
        {
          "name": "listOptionItemAttrs",
          "description": "Use this props to pass attrs for list option item.",
          "required": false,
          "type": {
            "name": "ListItemAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ class: 'ui-multiple-choices-item__option' })"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "MultipleChoicesModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "legend",
          "scoped": true,
          "description": "Use this slot to replace legend template.",
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            }
          ]
        },
        {
          "name": "header",
          "scoped": true,
          "description": "Use this slot to replace header template.",
          "bindings": [
            {
              "name": "id",
              "title": "binding"
            },
            {
              "name": "headingLabelAttrs",
              "title": "binding"
            },
            {
              "name": "label",
              "title": "binding"
            },
            {
              "name": "hasInfo",
              "title": "binding"
            },
            {
              "name": "buttonInfoAttrs",
              "title": "binding"
            },
            {
              "name": "iconInfoAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "bindings": [
            {
              "name": "multipleChoicesItemId",
              "title": "binding"
            },
            {
              "name": "headingLabelAttrs",
              "title": "binding"
            },
            {
              "name": "label",
              "title": "binding"
            }
          ]
        },
        {
          "name": "info",
          "scoped": true,
          "bindings": [
            {
              "name": "hasInfo",
              "title": "binding"
            },
            {
              "name": "buttonInfoAttrs",
              "title": "binding"
            },
            {
              "name": "iconInfoAttrs",
              "title": "binding"
            },
            {
              "name": "labelInfoAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "option",
          "scoped": true,
          "description": "Use this slot to replace option template.",
          "bindings": [
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "listOptionItemAttrs",
              "title": "binding"
            },
            {
              "name": "invalid",
              "title": "binding"
            },
            {
              "name": "option",
              "title": "binding"
            }
          ]
        },
        {
          "name": "alert",
          "scoped": true,
          "description": "Use this slot to replace alert template.",
          "bindings": [
            {
              "name": "invalid",
              "title": "binding"
            },
            {
              "name": "alertAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMultipleChoices/_internal/UiMultipleChoicesItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMultipleAnswerItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "invalid",
          "description": "Use this props to set invalid state of item.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set checked.",
          "required": false,
          "type": {
            "name": "MultipleAnswerModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        },
        {
          "name": "value",
          "description": "Use this props to set value of item.",
          "required": false,
          "type": {
            "name": "MultipleAnswerModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "label",
          "description": "Use this props to set label of item.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set id of item.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "textLabelAttrs",
          "description": "Use this props to pass attrs for label UiText.",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  tag: 'span',\n  class: 'ui-multiple-answer-item__label',\n})"
          }
        },
        {
          "name": "buttonInfoAttrs",
          "description": "Use this props to pass attrs for info UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "labelInfoAttrs",
          "description": "Use this props to pass attrs for info label element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconInfoAttrs",
          "description": "Use this props to pass attrs for info UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'info' })"
          }
        },
        {
          "name": "translation",
          "description": "Use this props to pass labels inside component translation.",
          "required": false,
          "type": {
            "name": "MultipleAnswerItemTranslation"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ info: 'What does it mean?' })"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "MultipleAnswerModelValue"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "choice",
          "scoped": true,
          "bindings": [
            {
              "name": "id",
              "title": "binding"
            },
            {
              "name": "value",
              "title": "binding"
            },
            {
              "name": "invalid",
              "title": "binding"
            },
            {
              "name": "label",
              "title": "binding"
            },
            {
              "name": "component",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "description": "Use this slot to place content inside list-item."
        },
        {
          "name": "`label-${id}`",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "suffix",
          "scoped": true,
          "description": "Use this slot to replace suffix template",
          "bindings": [
            {
              "name": "hasSuffix",
              "title": "binding"
            },
            {
              "name": "suffixComponent",
              "title": "binding"
            },
            {
              "name": "suffixAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMultipleAnswer/_internal/UiMultipleAnswerItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMenuItemSuffix",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "label",
          "description": "Use this props to set label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "icon",
          "description": "Use this props to set icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "'present'"
          }
        },
        {
          "name": "iconSuffixAttrs",
          "description": "Use this props to pass attrs for suffix UIIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon",
          "scoped": true,
          "description": "Use this slot to replace icon template.",
          "bindings": [
            {
              "name": "hasIcon",
              "title": "binding"
            },
            {
              "name": "iconSuffixAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMenu/_internal/UiMenuItemSuffix.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiMenuItem",
      "description": "",
      "tags": {},
      "expose": [
        {
          "name": "tabindex"
        }
      ],
      "props": [
        {
          "name": "icon",
          "description": "Use this props to set icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "'present'"
          }
        },
        {
          "name": "suffixVisible",
          "description": "Use this props to set suffix visibility.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"default\""
              },
              {
                "name": "\"always\""
              },
              {
                "name": "\"never\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'default'"
          }
        },
        {
          "name": "suffixAttrs",
          "description": "Use this props to pass attrs for UIMenuItemSuffix",
          "required": false,
          "type": {
            "name": "MenuItemSuffixAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ class: 'ui-button--text ui-menu-item__suffix' })"
          }
        },
        {
          "name": "listItemAttrs",
          "description": "Use this props to pass attrs for list item element",
          "required": false,
          "type": {
            "name": "ListItemAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ class: 'ui-menu-item' })"
          }
        }
      ],
      "slots": [
        {
          "name": "label",
          "description": "Use this slot to replace label template."
        },
        {
          "name": "default",
          "description": "Use this slot to place label content inside menu-item."
        },
        {
          "name": "suffix",
          "scoped": true,
          "description": "Use this slot to replace suffix template",
          "bindings": [
            {
              "name": "hasSuffix",
              "title": "binding"
            },
            {
              "name": "suffixAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiMenu/_internal/UiMenuItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiListItemSuffixAsText",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "label",
          "description": "Use this props to set label.",
          "required": true,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiList/_internal/UiListItemSuffixAsText.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiListItemSuffixAsButton",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "label",
          "description": "Use this props to set label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "icon",
          "description": "Use this props to set icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "iconSuffixAttrs",
          "description": "Use this props to pass attrs for suffix UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "labelSuffixAttrs",
          "description": "Use this props to pass attrs for label element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            },
            {
              "name": "labelSuffixAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "icon",
          "scoped": true,
          "description": "Use this slot to replace icon template.",
          "bindings": [
            {
              "name": "hasIcon",
              "title": "binding"
            },
            {
              "name": "iconSuffixAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiList/_internal/UiListItemSuffixAsButton.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiListItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to set list item content tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'div'"
          }
        },
        {
          "name": "icon",
          "description": "Use this props to set suffix icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "hasSuffix",
          "description": "Use this props to control suffix visibility.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "suffixAttrs",
          "description": "Use this props to pass attrs for UIListItemSuffix",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "ListItemSuffixAsButtonAttrsProps"
              },
              {
                "name": "ListItemSuffixAsTextAttrsProps"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "listItemAttrs",
          "description": "Use this props to pass attrs for list item element",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "LiHTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace list item content template.",
          "bindings": [
            {
              "name": "tag",
              "title": "binding"
            },
            {
              "name": "hasSuffix",
              "title": "binding"
            },
            {
              "name": "suffixComponent",
              "title": "binding"
            },
            {
              "name": "suffixAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside list-item."
        },
        {
          "name": "suffix",
          "scoped": true,
          "description": "Use this slot to replace suffix template",
          "bindings": [
            {
              "name": "hasSuffix",
              "title": "binding"
            },
            {
              "name": "suffixComponent",
              "title": "binding"
            },
            {
              "name": "suffixAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiList/_internal/UiListItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiHorizontalPagingItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "label",
          "description": "Use this props to set inside pages item label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "title",
          "description": "Use this props to set inside pages item title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set inside pages item name.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "tag",
          "description": "Use this props to set list item content tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "UiButton"
          }
        }
      ],
      "slots": [
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiHorizontalPaging/_internal/UiHorizontalPagingItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerYearTab",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        },
        {
          "name": "select",
          "type": {
            "names": [
              "{type: 'year'; value: string}"
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerYearTab.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerYearInput",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "error",
          "description": "Use this props to set input in error state manually",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "valid",
          "description": "Use this props to set input value validation status",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs to input.",
          "required": false,
          "type": {
            "name": "TSIndexedAccessType"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  maxlength: '4',\n  inputmode: 'numeric',\n  autocomplete: 'off',\n  pattern: '[0-9]*',\n})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        },
        {
          "name": "change-input",
          "type": {
            "names": [
              "\"year\""
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerYearInput.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerTabItem",
      "description": "",
      "tags": {},
      "slots": [
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerTabItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerTab",
      "description": "",
      "tags": {},
      "slots": [
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerTab.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerMonthTab",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        },
        {
          "name": "select",
          "type": {
            "names": [
              "{type: 'month'; value: string}"
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerMonthTab.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerMonthInput",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "error",
          "description": "Use this props to set input in error state manually",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "valid",
          "description": "Use this props to set input value validation status",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs to input.",
          "required": false,
          "type": {
            "name": "TSIndexedAccessType"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  maxlength: '2',\n  inputmode: 'numeric',\n  autocomplete: 'off',\n  pattern: '[0-9]*',\n})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        },
        {
          "name": "change-input",
          "type": {
            "names": [
              "\"month\""
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerMonthInput.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerDayTab",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        },
        {
          "name": "select",
          "type": {
            "names": [
              "{type: 'day'; value: number}"
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerDayTab.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerDayInput",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props or v-model to set value.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "error",
          "description": "Use this props to set input in error state manually",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "valid",
          "description": "Use this props to set input value validation status",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "inputAttrs",
          "description": "Use this props to pass attrs to input.",
          "required": false,
          "type": {
            "name": "TSIndexedAccessType"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  maxlength: '2',\n  inputmode: 'numeric',\n  autocomplete: 'off',\n  pattern: '[0-9]*',\n})"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue",
          "type": {
            "names": [
              "string"
            ]
          }
        },
        {
          "name": "change-input",
          "type": {
            "names": [
              "\"day\""
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerDayInput.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDatepickerCalendar",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "lastFocused",
          "description": "Use this props to set current tab value.",
          "required": false,
          "type": {
            "name": "DatepickerDatePart"
          },
          "defaultValue": {
            "func": false,
            "value": "'day'"
          }
        },
        {
          "name": "iconToggleAttrs",
          "description": "Use this props to pass attrs for UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'calendar' })"
          }
        },
        {
          "name": "tabsAttrs",
          "description": "Use this props to pass attrs for UiTabs.",
          "required": false,
          "type": {
            "name": "TabsAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "tabsItemDayAttrs",
          "description": "Use this props to pass attrs for day UiTabsItem.",
          "required": false,
          "type": {
            "name": "DatepickerDayTabAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ id: 'datepicker-calendar-day' })"
          }
        },
        {
          "name": "tabsItemMonthAttrs",
          "description": "Use this props to pass attrs for month UiTabsItem.",
          "required": false,
          "type": {
            "name": "DatepickerMonthTabAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ id: 'datepicker-calendar-month' })"
          }
        },
        {
          "name": "tabsItemYearAttrs",
          "description": "Use this props to pass attrs for year UiTabsItem.",
          "required": false,
          "type": {
            "name": "DatepickerYearTabAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ id: 'datepicker-calendar-year' })"
          }
        }
      ],
      "events": [
        {
          "name": "select",
          "type": {
            "names": [
              "Event"
            ]
          }
        },
        {
          "name": "open",
          "type": {
            "names": [
              "Event"
            ]
          }
        }
      ],
      "slots": [
        {
          "name": "toggle",
          "scoped": true,
          "bindings": [
            {
              "name": "toggleHandler",
              "title": "binding"
            },
            {
              "name": "buttonToggleAttrs",
              "title": "binding"
            },
            {
              "name": "iconToggleAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiDatepicker/_internal/UiDatepickerCalendar.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiControlsNextButton",
      "description": "",
      "tags": {},
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place next button label."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiControls/_internal/UiControlsNextButton.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiControlsBackButton",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "iconBackAttrs",
          "description": "Use this props to pass attrs for back UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place back button label."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiControls/_internal/UiControlsBackButton.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiControlsVertical",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "hideNextButton",
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "hideBackButton",
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "toBack",
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "toNext",
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "invalid",
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "translation",
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  back: 'Back',\n  next: 'Next',\n})"
          }
        },
        {
          "name": "buttonNextAttrs",
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonBackAttrs",
          "defaultValue": {
            "func": false,
            "value": "() => ({ to: '' })"
          }
        },
        {
          "name": "iconBackAttrs",
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'chevron-left' })"
          }
        }
      ],
      "slots": [
        {
          "name": "back",
          "scoped": true,
          "description": "Use this slot to replace back template.",
          "bindings": [
            {
              "title": "binding",
              "type": {
                "name": "ControlsNavigation"
              },
              "name": "toBack"
            },
            {
              "title": "binding",
              "type": {
                "name": "boolean"
              },
              "name": "hideBackButton"
            },
            {
              "title": "binding",
              "type": {
                "name": "ButtonAttrsProps"
              },
              "name": "buttonBackAttrs"
            },
            {
              "title": "binding",
              "type": {
                "name": "IconAttrsProps"
              },
              "name": "iconBackAttrs"
            },
            {
              "title": "binding",
              "type": {
                "name": "ControlsTranslation"
              },
              "name": "translation"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place container content."
        },
        {
          "name": "next",
          "scoped": true,
          "description": "Use this slot to replace next template.",
          "bindings": [
            {
              "title": "binding",
              "type": {
                "name": "ControlsNavigation"
              },
              "name": "toNext"
            },
            {
              "title": "binding",
              "type": {
                "name": "boolean"
              },
              "name": "hideNextButton"
            },
            {
              "title": "binding",
              "type": {
                "name": "ButtonAttrsProps"
              },
              "name": "buttonNextAttrs"
            },
            {
              "title": "binding",
              "type": {
                "name": "boolean"
              },
              "name": "invalid"
            },
            {
              "title": "binding",
              "type": {
                "name": "ControlsTranslation"
              },
              "name": "translation"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiControls/_internal/layouts/UiControlsVertical.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiControlsHorizontal",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "hideNextButton",
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "hideBackButton",
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        },
        {
          "name": "toBack",
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "toNext",
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "invalid",
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "translation",
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  back: 'Back',\n  next: 'Next',\n})"
          }
        },
        {
          "name": "buttonNextAttrs",
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "buttonBackAttrs",
          "defaultValue": {
            "func": false,
            "value": "() => ({ to: '' })"
          }
        },
        {
          "name": "iconBackAttrs",
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'chevron-left' })"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place container content."
        },
        {
          "name": "actions",
          "scoped": true,
          "description": "Use this slot to replace actions template.",
          "bindings": [
            {
              "name": "toNext",
              "title": "binding"
            },
            {
              "name": "hideNextButton",
              "title": "binding"
            },
            {
              "name": "buttonNextAttrs",
              "title": "binding"
            },
            {
              "name": "invalid",
              "title": "binding"
            },
            {
              "name": "toBack",
              "title": "binding"
            },
            {
              "name": "hideBackButton",
              "title": "binding"
            },
            {
              "name": "buttonBackAttrs",
              "title": "binding"
            },
            {
              "name": "iconBackAttrs",
              "title": "binding"
            },
            {
              "name": "translation",
              "title": "binding"
            }
          ]
        },
        {
          "name": "next",
          "scoped": true,
          "description": "Use this slot to replace next template.",
          "bindings": [
            {
              "title": "binding",
              "type": {
                "name": "ControlsNavigation"
              },
              "name": "toNext"
            },
            {
              "title": "binding",
              "type": {
                "name": "boolean"
              },
              "name": "hideNextButton"
            },
            {
              "title": "binding",
              "type": {
                "name": "ButtonAttrsProps"
              },
              "name": "buttonNextAttrs"
            },
            {
              "title": "binding",
              "type": {
                "name": "boolean"
              },
              "name": "invalid"
            },
            {
              "title": "binding",
              "type": {
                "name": "ControlsTranslation"
              },
              "name": "translation"
            }
          ]
        },
        {
          "name": "back",
          "scoped": true,
          "description": "Use this slot to replace back template.",
          "bindings": [
            {
              "title": "binding",
              "type": {
                "name": "ControlsNavigation"
              },
              "name": "toBack"
            },
            {
              "title": "binding",
              "type": {
                "name": "boolean"
              },
              "name": "hideBackButton"
            },
            {
              "title": "binding",
              "type": {
                "name": "ButtonAttrsProps"
              },
              "name": "buttonBackAttrs"
            },
            {
              "title": "binding",
              "type": {
                "name": "IconAttrsProps"
              },
              "name": "iconBackAttrs"
            },
            {
              "title": "binding",
              "type": {
                "name": "ControlsTranslation"
              },
              "name": "translation"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiControls/_internal/layouts/UiControlsHorizontal.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiAccordionItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "title",
          "description": "Use this props to set item title.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set item name, it used to toggle.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "settings",
          "description": "Use this props to setup item component.",
          "required": false,
          "type": {
            "name": "AccordionItemSettings"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  iconOpen: 'chevron-up',\n  iconClose: 'chevron-down',\n})"
          }
        },
        {
          "name": "buttonTogglerAttrs",
          "description": "Use this props to pass attrs to toggler UiButton.",
          "required": false,
          "type": {
            "name": "ButtonAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "iconTogglerAttrs",
          "description": "Use this props to pass attrs to toggler UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "listItemAttrs",
          "description": "Use this props to pass attrs to list item.",
          "required": false,
          "type": {
            "name": "TSIndexedAccessType"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ class: 'ui-accordion-item' })"
          }
        },
        {
          "name": "contentAttrs",
          "description": "Use this props to pass attrs to content element.",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "toggler",
          "scoped": true,
          "description": "Use this slot to replace toggler template.",
          "bindings": [
            {
              "name": "buttonTogglerAttrs",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            },
            {
              "name": "isOpen",
              "title": "binding"
            },
            {
              "name": "toggle",
              "title": "binding"
            },
            {
              "name": "title",
              "title": "binding"
            },
            {
              "name": "iconOpen",
              "title": "binding"
            },
            {
              "name": "iconClose",
              "title": "binding"
            },
            {
              "name": "iconTogglerAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "chevron",
          "scoped": true,
          "description": "Use this slot to replace chevron template.",
          "bindings": [
            {
              "name": "iconTogglerAttrs",
              "title": "binding"
            },
            {
              "name": "isOpen",
              "title": "binding"
            },
            {
              "name": "iconOpen",
              "title": "binding"
            },
            {
              "name": "iconClose",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace content template.",
          "bindings": [
            {
              "name": "isOpen",
              "title": "binding"
            },
            {
              "name": "contentAttrs",
              "title": "binding"
            },
            {
              "name": "name",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place content inside accordion."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/organisms/UiAccordion/_internal/UiAccordionItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiToggleButton",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "value",
          "description": "Use this props to set value of toggle button.",
          "required": false,
          "type": {
            "name": "TSIndexedAccessType"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "events": [
        {
          "name": "check"
        },
        {
          "name": "uncheck"
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place content inside component."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiToggleButtonGroup/_internal/UiToggleButton.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiSwitchControl",
      "description": "",
      "tags": {},
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiSwitch/_internal/UiSwitchControl.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiStepperStep",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "index",
          "description": "Use this props to pass index of current step.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "activeStepIndex",
          "description": "Use this props to pass index of active step.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "0"
          }
        },
        {
          "name": "label",
          "description": "Use this props to set the step label.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        }
      ],
      "slots": [
        {
          "name": "item-link",
          "scoped": true,
          "description": "Use this slot to replace item-link template.",
          "bindings": [
            {
              "name": "itemAttrs",
              "title": "binding"
            },
            {
              "name": "itemClass",
              "title": "binding"
            },
            {
              "name": "label",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiStepper/_internal/UiStepperStep.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiPhoneNumberPrefixToggle",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "isOpen",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        }
      ],
      "slots": [
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiPhoneNumber/_internal/UiPhoneNumberPrefix/UiPhoneNumberPrefixToggle.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiPhoneNumberPrefix",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props to set default prefix phone code.",
          "required": false,
          "type": {
            "name": "PhoneCodeType"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  code: '',\n  countryCode: '',\n  country: '',\n})"
          }
        },
        {
          "name": "languageData",
          "description": "Use this props to set phone number prefix default country code.",
          "required": false,
          "type": {
            "name": "{\n country: SupportedCountryCodeType,\n language: string,\n}"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({\n  country: 'us',\n  language: 'en',\n})"
          }
        },
        {
          "name": "countryCodes",
          "description": "Use this props to set country code items.",
          "required": false,
          "type": {
            "name": "CountryCodes"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ([])"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiPhoneNumber/_internal/UiPhoneNumberPrefix/UiPhoneNumberPrefix.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiPhoneNumberInput",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "modelValue",
          "description": "Use this props to set phone number.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "placeholder",
          "description": "Use this props to set input placeholder.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "id",
          "description": "Use this props to set input id.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "type",
          "description": "Use this props to set input type.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "'tel'"
          }
        },
        {
          "name": "hasError",
          "description": "Use this props to set error state.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        }
      ],
      "events": [
        {
          "name": "update:modelValue"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiPhoneNumber/_internal/UiPhoneNumberInput/UiPhoneNumberInput.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiNavigationItem",
      "description": "",
      "tags": {},
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place navigation item content."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiNavigation/_internal/UiNavigationItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiLoaderTransition",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "isLoading",
          "description": "Use this props to show UiLoader component.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "name",
          "description": "Use this props to set transition name.",
          "required": false,
          "type": {
            "name": "\"\""
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "appear",
          "description": "Use this props to apply a transition on the initial render.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        },
        {
          "name": "isOpacityTransitionType",
          "description": "Use this props to use opacity transition type.",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "false"
          }
        }
      ],
      "slots": [
        {
          "name": "loader"
        },
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderTransition.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiLoaderSpinner",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "label",
          "description": "Use this prop to set the label text.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "loaderSpinnerAttrs",
          "description": "Use this props to pass attrs for spinner",
          "required": false,
          "type": {
            "name": "DefineAttrsProps",
            "elements": [
              {
                "name": "null"
              },
              {
                "name": "HTMLAttributes"
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textLabelAttrs",
          "description": "Use this props to pass attrs for label UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        }
      ],
      "slots": [
        {
          "name": "loader",
          "scoped": true,
          "description": "Use this slot to replace loader template.",
          "bindings": [
            {
              "name": "loaderSpinnerAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "label",
          "scoped": true,
          "description": "Use this slot to replace label template.",
          "bindings": [
            {
              "name": "label",
              "title": "binding"
            },
            {
              "name": "textLabelAttrs",
              "title": "binding"
            }
          ]
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderSpinner.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiLoaderSkeleton",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "type",
          "description": "Use this props to set skeleton type.",
          "required": false,
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "\"common\""
              },
              {
                "name": "\"question\""
              }
            ]
          },
          "defaultValue": {
            "func": false,
            "value": "'common'"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to put skeleton blocks."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderSkeleton.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiLoaderNativeTransition",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "isLoading",
          "description": "Use this props to show UiLoader component",
          "required": false,
          "type": {
            "name": "boolean"
          },
          "defaultValue": {
            "func": false,
            "value": "true"
          }
        }
      ],
      "slots": [
        {
          "name": "loader"
        },
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderNativeTransition.vue"
      ]
    },
    {
      "displayName": "UiLoaderEllipsis",
      "description": "",
      "tags": {},
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderEllipsis.vue"
      ]
    },
    {
      "displayName": "UiLoaderSkeletonQuestion",
      "description": "",
      "tags": {},
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderSkeletons/UiLoaderSkeletonQuestion.vue"
      ]
    },
    {
      "displayName": "UiLoaderSkeletonCommon",
      "description": "",
      "tags": {},
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiLoader/_internal/UiLoaderSkeletons/UiLoaderSkeletonCommon.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiInteractiveSvgElement",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "tag",
          "description": "Use this props to set component tag.",
          "required": false,
          "type": {
            "name": "HTMLTag"
          },
          "defaultValue": {
            "func": false,
            "value": "'path'"
          }
        }
      ],
      "slots": [
        {
          "name": "default",
          "description": "Use this slot to place svg elements."
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiInteractiveSvg/_internal/UiInteractiveSvgElement.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiFormFieldCharacterCounter",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "value",
          "description": "Use this props to pass value of input.",
          "required": false,
          "type": {
            "name": "string"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "max",
          "description": "Use this props to set max of characters.",
          "required": false,
          "type": {
            "name": "number"
          },
          "defaultValue": {
            "func": false,
            "value": "240"
          }
        }
      ],
      "events": [
        {
          "name": "error",
          "type": {
            "names": [
              "union"
            ],
            "elements": [
              {
                "name": "string"
              },
              {
                "name": "null"
              }
            ]
          }
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiFormField/_internal/UiFormFieldCharacterCounter.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiDropdownItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "value",
          "description": "Use this props to set the value of the dropdown item.",
          "required": false,
          "type": {
            "name": "DropdownModelValue"
          },
          "defaultValue": {
            "func": false,
            "value": "''"
          }
        },
        {
          "name": "iconItemAttrs",
          "description": "Use this props to pass attrs to UiIcon.",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ icon: 'present' })"
          }
        }
      ],
      "slots": [
        {
          "name": "default"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiDropdown/_internal/UiDropdownItem.vue"
      ]
    },
    {
      "exportName": "default",
      "displayName": "UiBulletPointsItem",
      "description": "",
      "tags": {},
      "props": [
        {
          "name": "icon",
          "description": "Use this props to set the bullet point icon.",
          "required": false,
          "type": {
            "name": "Icon"
          },
          "defaultValue": {
            "func": false,
            "value": "'bullet-common'"
          }
        },
        {
          "name": "iconMarkerAttrs",
          "description": "Use this props to pass attrs for marker UiIcon",
          "required": false,
          "type": {
            "name": "IconAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({})"
          }
        },
        {
          "name": "textMarkerAttrs",
          "description": "Use this props to pass attrs for checkmark UiIcon",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ tag: 'span' })"
          }
        },
        {
          "name": "textContentAttrs",
          "description": "Use this props to pass attrs for text content UiText",
          "required": false,
          "type": {
            "name": "TextAttrsProps"
          },
          "defaultValue": {
            "func": false,
            "value": "() => ({ })"
          }
        }
      ],
      "slots": [
        {
          "name": "marker",
          "scoped": true,
          "description": "Use this slot to replace bullet points item marker",
          "bindings": [
            {
              "name": "isUnordered",
              "title": "binding"
            },
            {
              "name": "icon",
              "title": "binding"
            },
            {
              "name": "iconMarkerAttrs",
              "title": "binding"
            },
            {
              "name": "textMarkerAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "content",
          "scoped": true,
          "description": "Use this slot to replace bullet points item content",
          "bindings": [
            {
              "name": "textContentAttrs",
              "title": "binding"
            }
          ]
        },
        {
          "name": "default",
          "description": "Use this slot to place bullet points item content"
        }
      ],
      "sourceFiles": [
        "/Users/przemyslawspaczek/Projects/infermedica-component-library/src/components/molecules/UiBulletPoints/_internal/UiBulletPointsItem.vue"
      ]
    }
  ]
}
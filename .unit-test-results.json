{
  "numTotalTestSuites": 129,
  "numPassedTestSuites": 129,
  "numFailedTestSuites": 0,
  "numPendingTestSuites": 0,
  "numTotalTests": 285,
  "numPassedTests": 283,
  "numFailedTests": 2,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "startTime": 1668427329067,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " directive/keyboardFocus remove class focus-hidden from body when press tab",
          "status": "passed",
          "title": "renders a component",
          "duration": 68,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue renders a content via value slot",
          "status": "passed",
          "title": "renders a content via value slot",
          "duration": 42,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue renders a content via decrement slot",
          "status": "passed",
          "title": "renders a content via decrement slot",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue renders a content via increment slot",
          "status": "passed",
          "title": "renders a content via increment slot",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue percent position of thumb is right",
          "status": "passed",
          "title": "percent position of thumb is right",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue pass percent position of thumb to component style",
          "status": "passed",
          "title": "pass percent position of thumb to component style",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue clicking increment button increments the value",
          "status": "passed",
          "title": "clicking increment button increments the value",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue clicking decrement button decrements the value",
          "status": "passed",
          "title": "clicking decrement button decrements the value",
          "duration": 43,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRange.vue"
          ],
          "fullName": " UiRange.vue component passes attributes to child button components",
          "status": "passed",
          "title": "component passes attributes to child button components",
          "duration": 20,
          "failureMessages": []
        }
      ],
      "startTime": 1668427335911,
      "endTime": 1668427336158,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiRange/UiRange.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 122,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue renders a content via decrement slot",
          "status": "passed",
          "title": "renders a content via decrement slot",
          "duration": 100,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue renders a content via increment slot",
          "status": "passed",
          "title": "renders a content via increment slot",
          "duration": 30,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue rendes certein number of options",
          "status": "passed",
          "title": "rendes certein number of options",
          "duration": 82,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue pain value pass to component",
          "status": "passed",
          "title": "pain value pass to component",
          "duration": 55,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue clicking increment button increments scale value",
          "status": "passed",
          "title": "clicking increment button increments scale value",
          "duration": 41,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue clicking decrement button decrements scale value",
          "status": "passed",
          "title": "clicking decrement button decrements scale value",
          "duration": 57,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue incrementing by button dont get value out of scale bounds",
          "status": "passed",
          "title": "incrementing by button dont get value out of scale bounds",
          "duration": 35,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiScale.vue"
          ],
          "fullName": " UiScale.vue decrementing by button dont get value out of scale bounds",
          "status": "passed",
          "title": "decrementing by button dont get value out of scale bounds",
          "duration": 37,
          "failureMessages": []
        }
      ],
      "startTime": 1668427335956,
      "endTime": 1668427336515,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiScale/UiScale.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 137,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue component can be open by model value",
          "status": "passed",
          "title": "component can be open by model value",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue component can be closed by clicking outside when is closable",
          "status": "passed",
          "title": "component can be closed by clicking outside when is closable",
          "duration": 48,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue component can't be closed by clicking outside when is unclosable",
          "status": "passed",
          "title": "component can't be closed by clicking outside when is unclosable",
          "duration": 22,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue component emit confirm event",
          "status": "passed",
          "title": "component emit confirm event",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue component emit cancel event",
          "status": "passed",
          "title": "component emit cancel event",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue title scope slot renders content for title when component has title and description props",
          "status": "passed",
          "title": "title scope slot renders content for title when component has title and description props",
          "duration": 64,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue title slot is not rendered if component does not have title prop",
          "status": "passed",
          "title": "title slot is not rendered if component does not have title prop",
          "duration": 39,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue description scope slot render content for description when component has title and description props",
          "status": "passed",
          "title": "description scope slot render content for description when component has title and description props",
          "duration": 41,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue description scope slot render content for description if component does not have title prop",
          "status": "passed",
          "title": "description scope slot render content for description if component does not have title prop",
          "duration": 30,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiModal.vue"
          ],
          "fullName": " UiModal.vue description scope slot is rendered once if component does not have title prop",
          "status": "passed",
          "title": "description scope slot is rendered once if component does not have title prop",
          "duration": 23,
          "failureMessages": []
        }
      ],
      "startTime": 1668427336044,
      "endTime": 1668427336505,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiModal/UiModal.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiStepper.vue",
            "shared"
          ],
          "fullName": " UiStepper.vue shared renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 51,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiStepper.vue",
            "mobile"
          ],
          "fullName": " UiStepper.vue mobile renders a component in mobile version",
          "status": "passed",
          "title": "renders a component in mobile version",
          "duration": 53,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiStepper.vue",
            "mobile"
          ],
          "fullName": " UiStepper.vue mobile renders a component displaying correct step number",
          "status": "passed",
          "title": "renders a component displaying correct step number",
          "duration": 33,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiStepper.vue",
            "desktop"
          ],
          "fullName": " UiStepper.vue desktop renders a component in desktop version",
          "status": "passed",
          "title": "renders a component in desktop version",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiStepper.vue",
            "desktop"
          ],
          "fullName": " UiStepper.vue desktop renders a component with active class on the active element",
          "status": "failed",
          "title": "renders a component with active class on the active element",
          "duration": 30,
          "failureMessages": [
            "expected [ 'ui-list-item' ] to include 'ui-stepper__step--current'"
          ]
        },
        {
          "ancestorTitles": [
            "",
            "UiStepper.vue",
            "desktop"
          ],
          "fullName": " UiStepper.vue desktop renders a component with visited class on the visited elements",
          "status": "failed",
          "title": "renders a component with visited class on the visited elements",
          "duration": 32,
          "failureMessages": [
            "expected [ 'ui-list-item' ] to include 'ui-stepper__step--visited'"
          ]
        }
      ],
      "startTime": 1668427336219,
      "endTime": 1668427336444,
      "status": "failed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiStepper/UiStepper.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiMultipleAnswer.vue",
            "Component with Radioses"
          ],
          "fullName": " UiMultipleAnswer.vue Component with Radioses renders a component with radio buttons when modelValue is a string",
          "status": "passed",
          "title": "renders a component with radio buttons when modelValue is a string",
          "duration": 94,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/keyboardFocus"
          ],
          "fullName": " directive/keyboardFocus does not remove class focus-hidden from body when press other key than tab",
          "status": "passed",
          "title": "renders a component with radio buttons when modelValue is an object",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/keyboardFocus"
          ],
          "fullName": " directive/keyboardFocus focus element when press tab",
          "status": "passed",
          "title": "renders a component with correct number of radioses",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/keyboardFocus"
          ],
          "fullName": " directive/keyboardFocus add class focus-hidden to body on mouse click",
          "status": "passed",
          "title": "renders a component and radioses with error styles when invalid and touched prop is true",
          "duration": 45,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleAnswer.vue",
            "Component with Radioses"
          ],
          "fullName": " UiMultipleAnswer.vue Component with Radioses renders a component and radioses with error styles when invalid prop is false and touched prop is true",
          "status": "passed",
          "title": "renders a component and radioses with error styles when invalid prop is false and touched prop is true",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleAnswer.vue",
            "Component with Checkboxes"
          ],
          "fullName": " UiMultipleAnswer.vue Component with Checkboxes renders a component with checkboxes when modelValue is an array",
          "status": "passed",
          "title": "renders a component with checkboxes when modelValue is an array",
          "duration": 28,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleAnswer.vue",
            "Component with Checkboxes"
          ],
          "fullName": " UiMultipleAnswer.vue Component with Checkboxes renders a component correct number of checkboxes",
          "status": "passed",
          "title": "renders a component correct number of checkboxes",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleAnswer.vue",
            "Component with Checkboxes"
          ],
          "fullName": " UiMultipleAnswer.vue Component with Checkboxes renders a component and checkboxes with error styles when invalid and touched prop is true",
          "status": "passed",
          "title": "renders a component and checkboxes with error styles when invalid and touched prop is true",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleAnswer.vue",
            "Component with Checkboxes"
          ],
          "fullName": " UiMultipleAnswer.vue Component with Checkboxes renders a component and checkboxes with error styles when invalid prop is false and touched prop is true",
          "status": "passed",
          "title": "renders a component and checkboxes with error styles when invalid prop is false and touched prop is true",
          "duration": 59,
          "failureMessages": []
        }
      ],
      "startTime": 1668427336236,
      "endTime": 1668427336588,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/directives/keyboard-focus/keyboard-focus.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 48,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue component with title",
          "status": "passed",
          "title": "component with title",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue component without header",
          "status": "passed",
          "title": "component without header",
          "duration": 28,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue component has back button when some item is active ",
          "status": "passed",
          "title": "component has back button when some item is active ",
          "duration": 59,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue component with items passed by default slot",
          "status": "passed",
          "title": "component with items passed by default slot",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue component with items passed by items props",
          "status": "passed",
          "title": "component with items passed by items props",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue component supports nesting elements",
          "status": "passed",
          "title": "component supports nesting elements",
          "duration": 33,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "HorizontalPaging.vue"
          ],
          "fullName": " HorizontalPaging.vue back button in component with nesting elements remove last active item",
          "status": "passed",
          "title": "back button in component with nesting elements remove last active item",
          "duration": 35,
          "failureMessages": []
        }
      ],
      "startTime": 1668427336518,
      "endTime": 1668427336776,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiHorizontalPaging/UiHorizontalPaging.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 138,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue open calendar with day tab when all fields are filled",
          "status": "passed",
          "title": "open calendar with day tab when all fields are filled",
          "duration": 300,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue open calendar with month tab when all fields are filled",
          "status": "passed",
          "title": "open calendar with month tab when all fields are filled",
          "duration": 279,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue open calendar with year tab when all fields are filled",
          "status": "passed",
          "title": "open calendar with year tab when all fields are filled",
          "duration": 233,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue open calendar with day tab when non fields are filled",
          "status": "passed",
          "title": "open calendar with day tab when non fields are filled",
          "duration": 294,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue open calendar with month tab when non fields are filled",
          "status": "passed",
          "title": "open calendar with month tab when non fields are filled",
          "duration": 277,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue open calendar with year tab when non fields are filled",
          "status": "passed",
          "title": "open calendar with year tab when non fields are filled",
          "duration": 179,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue close calendar when all fields are filled",
          "status": "passed",
          "title": "close calendar when all fields are filled",
          "duration": 428,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue calendar is still open after focus on any input",
          "status": "passed",
          "title": "calendar is still open after focus on any input",
          "duration": 277,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDatepicker.vue"
          ],
          "fullName": " UiDatepicker.vue focuses calendar button after select date on calendar",
          "status": "passed",
          "title": "focuses calendar button after select date on calendar",
          "duration": 542,
          "failureMessages": []
        }
      ],
      "startTime": 1668427337178,
      "endTime": 1668427340125,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiDatepicker/UiDatepicker.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue"
          ],
          "fullName": " UiMenu.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 37,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue"
          ],
          "fullName": " UiMenu.vue renders a component via default slot",
          "status": "passed",
          "title": "renders a component via default slot",
          "duration": 38,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue"
          ],
          "fullName": " UiMenu.vue renders a component via label slot",
          "status": "passed",
          "title": "renders a component via label slot",
          "duration": 40,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue"
          ],
          "fullName": " UiMenu.vue renders a component via suffix slot",
          "status": "passed",
          "title": "renders a component via suffix slot",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue",
            "component correct render icon when item is selected"
          ],
          "fullName": " UiMenu.vue component correct render icon when item is selected \n      component  render an icon when \"suffixVisible\" is set to always and item is selected",
          "status": "passed",
          "title": "\n      component  render an icon when \"suffixVisible\" is set to always and item is selected",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue",
            "component correct render icon when item is selected"
          ],
          "fullName": " UiMenu.vue component correct render icon when item is selected \n      component doesn't render an icon when \"suffixVisible\" is set to never and item is selected",
          "status": "passed",
          "title": "\n      component doesn't render an icon when \"suffixVisible\" is set to never and item is selected",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue",
            "component correct render icon when item is selected"
          ],
          "fullName": " UiMenu.vue component correct render icon when item is selected \n      component  render an icon when \"suffixVisible\" is set to default and item is selected",
          "status": "passed",
          "title": "\n      component  render an icon when \"suffixVisible\" is set to default and item is selected",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue",
            "component correct render icon when item isn't selected"
          ],
          "fullName": " UiMenu.vue component correct render icon when item isn't selected \n      component  render an icon when \"suffixVisible\" is set to always and item isn't selected",
          "status": "passed",
          "title": "\n      component  render an icon when \"suffixVisible\" is set to always and item isn't selected",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue",
            "component correct render icon when item isn't selected"
          ],
          "fullName": " UiMenu.vue component correct render icon when item isn't selected \n      component doesn't render an icon when \"suffixVisible\" is set to never and item isn't selected",
          "status": "passed",
          "title": "\n      component doesn't render an icon when \"suffixVisible\" is set to never and item isn't selected",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue",
            "component correct render icon when item isn't selected"
          ],
          "fullName": " UiMenu.vue component correct render icon when item isn't selected \n      component  render an icon when \"suffixVisible\" is set to default and item isn't selected",
          "status": "passed",
          "title": "\n      component  render an icon when \"suffixVisible\" is set to default and item isn't selected",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMenu.vue"
          ],
          "fullName": " UiMenu.vue renders the correct number of items",
          "status": "passed",
          "title": "renders the correct number of items",
          "duration": 32,
          "failureMessages": []
        }
      ],
      "startTime": 1668427338209,
      "endTime": 1668427338432,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiMenu/UiMenu.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "directive/highlight"
          ],
          "fullName": " directive/highlight no markings if searched query is empty string",
          "status": "passed",
          "title": "no markings if searched query is empty string",
          "duration": 82,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/highlight"
          ],
          "fullName": " directive/highlight marking searched query",
          "status": "passed",
          "title": "marking searched query",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/highlight"
          ],
          "fullName": " directive/highlight correct update markings searched query",
          "status": "passed",
          "title": "correct update markings searched query",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/highlight"
          ],
          "fullName": " directive/highlight no markings if text does not contain searched query",
          "status": "passed",
          "title": "no markings if text does not contain searched query",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/highlight"
          ],
          "fullName": " directive/highlight thrown error when search query is null",
          "status": "passed",
          "title": "thrown error when search query is null",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/highlight"
          ],
          "fullName": " directive/highlight thrown error when search query is undefined",
          "status": "passed",
          "title": "thrown error when search query is undefined",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1668427338413,
      "endTime": 1668427338571,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/directives/highlight/highlight.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 71,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue renders component with custom label from slot",
          "status": "passed",
          "title": "renders component with custom label from slot",
          "duration": 54,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue renders component with custom label from slot and has only one label",
          "status": "passed",
          "title": "renders component with custom label from slot and has only one label",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue renders a label when passed a label prop",
          "status": "passed",
          "title": "renders a label when passed a label prop",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue renders an alert when passed an errorMessage prop",
          "status": "passed",
          "title": "renders an alert when passed an errorMessage prop",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue renders a hint alert when passed a label and hint props",
          "status": "passed",
          "title": "renders a hint alert when passed a label and hint props",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiFormField.vue"
          ],
          "fullName": " UiFormField.vue does not render a hint alert when passed hint prop without label",
          "status": "passed",
          "title": "does not render a hint alert when passed hint prop without label",
          "duration": 9,
          "failureMessages": []
        }
      ],
      "startTime": 1668427338523,
      "endTime": 1668427338705,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiFormField/UiFormField.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiDropdown.vue"
          ],
          "fullName": " UiDropdown.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 53,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDropdown.vue"
          ],
          "fullName": " UiDropdown.vue render a content from text props",
          "status": "passed",
          "title": "render a content from text props",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDropdown.vue"
          ],
          "fullName": " UiDropdown.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 38,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDropdown.vue"
          ],
          "fullName": " UiDropdown.vue render a content via toggle slot",
          "status": "passed",
          "title": "render a content via toggle slot",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDropdown.vue"
          ],
          "fullName": " UiDropdown.vue render a content via content slot",
          "status": "passed",
          "title": "render a content via content slot",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiDropdown.vue"
          ],
          "fullName": " UiDropdown.vue a trigger button click open dropdown",
          "status": "passed",
          "title": "a trigger button click open dropdown",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1668427338919,
      "endTime": 1668427339061,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiDropdown/UiDropdown.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiMultipleChoices.vue"
          ],
          "fullName": " UiMultipleChoices.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 48,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleChoices.vue"
          ],
          "fullName": " UiMultipleChoices.vue a component emits update:modelValue as array",
          "status": "passed",
          "title": "a component emits update:modelValue as array",
          "duration": 57,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleChoices.vue"
          ],
          "fullName": " UiMultipleChoices.vue a possible to pass custom choices by options property",
          "status": "passed",
          "title": "a possible to pass custom choices by options property",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMultipleChoices.vue"
          ],
          "fullName": " UiMultipleChoices.vue a possible to valid custom choices component",
          "status": "passed",
          "title": "a possible to valid custom choices component",
          "duration": 31,
          "failureMessages": []
        }
      ],
      "startTime": 1668427338986,
      "endTime": 1668427339142,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiMultipleChoices/UiMultipleChoices.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiRating.vue"
          ],
          "fullName": " UiRating.vue check if component renders",
          "status": "passed",
          "title": "check if component renders",
          "duration": 56,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRating.vue"
          ],
          "fullName": " UiRating.vue check if max rate pass to component",
          "status": "passed",
          "title": "check if max rate pass to component",
          "duration": 47,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRating.vue"
          ],
          "fullName": " UiRating.vue check if rate value pass to component",
          "status": "passed",
          "title": "check if rate value pass to component",
          "duration": 80,
          "failureMessages": []
        }
      ],
      "startTime": 1668427339104,
      "endTime": 1668427339287,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiRating/UiRating.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiBulletPoints.vue"
          ],
          "fullName": " UiBulletPoints.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 34,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiBulletPoints.vue"
          ],
          "fullName": " UiBulletPoints.vue component pass tag props",
          "status": "passed",
          "title": "component pass tag props",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiBulletPoints.vue"
          ],
          "fullName": " UiBulletPoints.vue component pass type props",
          "status": "passed",
          "title": "component pass type props",
          "duration": 48,
          "failureMessages": []
        }
      ],
      "startTime": 1668427341139,
      "endTime": 1668427341240,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiBulletPoints/UiBulletPoints.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiToggleButtonGroup.vue"
          ],
          "fullName": " UiToggleButtonGroup.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 35,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiToggleButtonGroup.vue"
          ],
          "fullName": " UiToggleButtonGroup.vue updates modelValue after click a first toggle button",
          "status": "passed",
          "title": "updates modelValue after click a first toggle button",
          "duration": 55,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiToggleButtonGroup.vue"
          ],
          "fullName": " UiToggleButtonGroup.vue unpressed a first item after third item clicked",
          "status": "passed",
          "title": "unpressed a first item after third item clicked",
          "duration": 23,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiToggleButtonGroup.vue"
          ],
          "fullName": " UiToggleButtonGroup.vue deselects item when deselectable props is set",
          "status": "passed",
          "title": "deselects item when deselectable props is set",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiToggleButtonGroup.vue"
          ],
          "fullName": " UiToggleButtonGroup.vue not deselects item when deselectable props is not set",
          "status": "passed",
          "title": "not deselects item when deselectable props is not set",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiToggleButtonGroup.vue"
          ],
          "fullName": " UiToggleButtonGroup.vue updates value with object values",
          "status": "passed",
          "title": "updates value with object values",
          "duration": 12,
          "failureMessages": []
        }
      ],
      "startTime": 1668427341204,
      "endTime": 1668427341355,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiToggleButtonGroup/UiToggleButtonGroup.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiControls.vue"
          ],
          "fullName": " UiControls.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 45,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiControls.vue"
          ],
          "fullName": " UiControls.vue component does not show next button when \"hideNextButton\" is true",
          "status": "passed",
          "title": "component does not show next button when \"hideNextButton\" is true",
          "duration": 23,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiControls.vue"
          ],
          "fullName": " UiControls.vue component does not show next button when \"toNext\" is absent",
          "status": "passed",
          "title": "component does not show next button when \"toNext\" is absent",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiControls.vue"
          ],
          "fullName": " UiControls.vue component does not show back button when \"toBack\" is absent",
          "status": "passed",
          "title": "component does not show back button when \"toBack\" is absent",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiControls.vue"
          ],
          "fullName": " UiControls.vue component has disabled next button when \"invalid\" is true and \"toNext\" is present",
          "status": "passed",
          "title": "component has disabled next button when \"invalid\" is true and \"toNext\" is present",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiControls.vue"
          ],
          "fullName": " UiControls.vue component emit has-error when \"invalid\" is true and \"toNext\" is present",
          "status": "passed",
          "title": "component emit has-error when \"invalid\" is true and \"toNext\" is present",
          "duration": 9,
          "failureMessages": []
        }
      ],
      "startTime": 1668427341275,
      "endTime": 1668427341377,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiControls/UiControls.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 66,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue clicking decrement button decrement the value",
          "status": "passed",
          "title": "clicking decrement button decrement the value",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue clicking increment button increment the value",
          "status": "passed",
          "title": "clicking increment button increment the value",
          "duration": 13,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue value can't be smallest than min",
          "status": "passed",
          "title": "value can't be smallest than min",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue value can't be bigger than max",
          "status": "passed",
          "title": "value can't be bigger than max",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1668427341406,
      "endTime": 1668427341537,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiNumberStepper/UiNumberStepper.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue render a component",
          "status": "passed",
          "title": "render a component",
          "duration": 49,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 52,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue render a content via checkbox slot",
          "status": "passed",
          "title": "render a content via checkbox slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue render default id for non passed id property",
          "status": "passed",
          "title": "render default id for non passed id property",
          "duration": 19,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue a checkbox click emits change event",
          "status": "passed",
          "title": "a checkbox click emits change event",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue a component pass Object as value",
          "status": "passed",
          "title": "a component pass Object as value",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiCheckbox.vue a component emits array for multiple checkboxes with object",
          "status": "passed",
          "title": "a component emits array for multiple checkboxes with object",
          "duration": 8,
          "failureMessages": []
        }
      ],
      "startTime": 1668427341458,
      "endTime": 1668427341622,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiCheckbox/UiCheckbox.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiHeader.vue"
          ],
          "fullName": " UiHeader.vue renders a component",
          "status": "passed",
          "title": "render a component",
          "duration": 31,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeader.vue"
          ],
          "fullName": " UiHeader.vue hamburger should not be visible on the desktop",
          "status": "passed",
          "title": "hamburger should not be visible on the desktop",
          "duration": 23,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeader.vue"
          ],
          "fullName": " UiHeader.vue hamburger should be visible on the mobile",
          "status": "passed",
          "title": "hamburger should be visible on the mobile",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeader.vue"
          ],
          "fullName": " UiHeader.vue a component emits hamburger:open event",
          "status": "passed",
          "title": "a component emits hamburger:open event",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeader.vue"
          ],
          "fullName": " UiHeader.vue a component emits hamburger:close event",
          "status": "passed",
          "title": "a component emits hamburger:close event",
          "duration": 11,
          "failureMessages": []
        }
      ],
      "startTime": 1668427341758,
      "endTime": 1668427341872,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiHeader/UiHeader.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiInput.vue"
          ],
          "fullName": " UiInput.vue render a component",
          "status": "passed",
          "title": "render a component",
          "duration": 41,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInput.vue"
          ],
          "fullName": " UiInput.vue render a component with suffix",
          "status": "passed",
          "title": "render a component with suffix",
          "duration": 27,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInput.vue"
          ],
          "fullName": " UiInput.vue render a native attributes on root element",
          "status": "passed",
          "title": "render a native attributes on root element",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInput.vue"
          ],
          "fullName": " UiInput.vue render a content via aside slot",
          "status": "passed",
          "title": "render a content via aside slot",
          "duration": 28,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInput.vue"
          ],
          "fullName": " UiInput.vue a component emits input event",
          "status": "passed",
          "title": "a component emits input event",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInput.vue"
          ],
          "fullName": " UiInput.vue a number input cant accept non-numerical value",
          "status": "passed",
          "title": "a number input cant accept non-numerical value",
          "duration": 9,
          "failureMessages": []
        }
      ],
      "startTime": 1668427342339,
      "endTime": 1668427342471,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiInput/UiInput.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "helpers/focusElement"
          ],
          "fullName": " helpers/focusElement focus element",
          "status": "passed",
          "title": "remove class focus-hidden from body when press tab",
          "duration": 65,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/focusElement"
          ],
          "fullName": " helpers/focusElement focus element with visible focus",
          "status": "passed",
          "title": "does not remove class focus-hidden from body when press other key than tab",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/keyboardFocus"
          ],
          "fullName": " directive/keyboardFocus focus element when press tab",
          "status": "passed",
          "title": "focus element when press tab",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/keyboardFocus"
          ],
          "fullName": " directive/keyboardFocus add class focus-hidden to body on mouse click",
          "status": "passed",
          "title": "add class focus-hidden to body on mouse click",
          "duration": 7,
          "failureMessages": []
        }
      ],
      "startTime": 1668427343509,
      "endTime": 1668427343596,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/helpers/focus-element/focus-element.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "directive/clickOutside"
          ],
          "fullName": " directive/clickOutside handler function is called when click outside",
          "status": "passed",
          "title": "handler function is called when click outside",
          "duration": 68,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/clickOutside"
          ],
          "fullName": " directive/clickOutside handler function is not called when click root element",
          "status": "passed",
          "title": "handler function is not called when click root element",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/clickOutside"
          ],
          "fullName": " directive/clickOutside handler function is not called when click inside",
          "status": "passed",
          "title": "handler function is not called when click inside",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/clickOutside"
          ],
          "fullName": " directive/clickOutside adding false argument disables the directive",
          "status": "passed",
          "title": "adding false argument disables the directive",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/clickOutside"
          ],
          "fullName": " directive/clickOutside handler function is called when argument is undefined",
          "status": "passed",
          "title": "handler function is called when argument is undefined",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/clickOutside"
          ],
          "fullName": " directive/clickOutside reactivity of argument",
          "status": "passed",
          "title": "reactivity of argument",
          "duration": 14,
          "failureMessages": []
        }
      ],
      "startTime": 1668427343511,
      "endTime": 1668427343624,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/directives/click-outside/click-outside.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiQuestion.vue"
          ],
          "fullName": " UiQuestion.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 43,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiQuestion.vue"
          ],
          "fullName": " UiQuestion.vue component does not render skip button when buttonActionAttrs is empty",
          "status": "passed",
          "title": "component does not render skip button when buttonActionAttrs is empty",
          "duration": 42,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiQuestion.vue"
          ],
          "fullName": " UiQuestion.vue component render skip button",
          "status": "passed",
          "title": "component render skip button",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiQuestion.vue"
          ],
          "fullName": " UiQuestion.vue skip button is hidden even onClick is pass to buttonActionAttrs",
          "status": "passed",
          "title": "skip button is hidden even onClick is pass to buttonActionAttrs",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1668427343733,
      "endTime": 1668427343846,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/templates/UiQuestion/UiQuestion.spec.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 31,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue renders UiInteractiveSvgElement tag provided by tag prop",
          "status": "passed",
          "title": "renders UiInteractiveSvgElement tag provided by tag prop",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue pass attributes to UiInteractiveSvgElement",
          "status": "passed",
          "title": "pass attributes to UiInteractiveSvgElement",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue pass listeners to UiInteractiveSvgElement",
          "status": "passed",
          "title": "pass listeners to UiInteractiveSvgElement",
          "duration": 17,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue pass attrs to nested UiInteractiveSvg elements",
          "status": "passed",
          "title": "pass attrs to nested UiInteractiveSvg elements",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue do not pass nested attrs to higher levels of UiInteractiveSvg elements",
          "status": "passed",
          "title": "do not pass nested attrs to higher levels of UiInteractiveSvg elements",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue do not pass attrs to deeper levels of UiInteractiveSvg elements",
          "status": "passed",
          "title": "do not pass attrs to deeper levels of UiInteractiveSvg elements",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue pass listeners to nested UiInteractiveSvg elements",
          "status": "passed",
          "title": "pass listeners to nested UiInteractiveSvg elements",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue do not pass listeners to deeper levels of UiInteractiveSvg elements",
          "status": "passed",
          "title": "do not pass listeners to deeper levels of UiInteractiveSvg elements",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiInteractiveSvg.vue"
          ],
          "fullName": " UiInteractiveSvg.vue do not pass nested listeners to higher levels of UiInteractiveSvg elements",
          "status": "passed",
          "title": "do not pass nested listeners to higher levels of UiInteractiveSvg elements",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1668427343804,
      "endTime": 1668427343941,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiInteractiveSvg/UiInteractiveSvg.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiNavigation.vue"
          ],
          "fullName": " UiNavigation.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 34,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNavigation.vue"
          ],
          "fullName": " UiNavigation.vue component render item with the correct text",
          "status": "passed",
          "title": "component render item with the correct text",
          "duration": 35,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNavigation.vue"
          ],
          "fullName": " UiNavigation.vue component render the correct number of items",
          "status": "passed",
          "title": "component render the correct number of items",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNavigation.vue"
          ],
          "fullName": " UiNavigation.vue component pass attributes to the one item",
          "status": "passed",
          "title": "component pass attributes to the one item",
          "duration": 18,
          "failureMessages": []
        }
      ],
      "startTime": 1668427343828,
      "endTime": 1668427343927,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiNavigation/UiNavigation.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiRating.vue"
          ],
          "fullName": " UiRating.vue check if component renders",
          "status": "passed",
          "title": "renders a component",
          "duration": 50,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRating.vue"
          ],
          "fullName": " UiRating.vue check if max rate pass to component",
          "status": "passed",
          "title": "component is success type",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiChip.vue"
          ],
          "fullName": " UiChip.vue a component pass attributes for remove button",
          "status": "passed",
          "title": "a component pass attributes for remove button",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiChip.vue"
          ],
          "fullName": " UiChip.vue render a content via remove slot",
          "status": "passed",
          "title": "component is warning type",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNotification.vue"
          ],
          "fullName": " UiNotification.vue component is error type",
          "status": "passed",
          "title": "component is error type",
          "duration": 9,
          "failureMessages": []
        }
      ],
      "startTime": 1668427344031,
      "endTime": 1668427344136,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiChip/UiChip.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiSidePanel.vue"
          ],
          "fullName": " UiSidePanel.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 32,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSidePanel.vue"
          ],
          "fullName": " UiSidePanel.vue a component can be open by model value",
          "status": "passed",
          "title": "a component can be open by model value",
          "duration": 49,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSidePanel.vue"
          ],
          "fullName": " UiSidePanel.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 28,
          "failureMessages": []
        }
      ],
      "startTime": 1668012794715,
      "endTime": 1668012794824,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiSidePanel/UiSidePanel.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiSidePanel.vue"
          ],
          "fullName": " UiCheckbox.vue render a component",
          "status": "passed",
          "title": "render a component",
          "duration": 48,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiCheckbox.vue"
          ],
          "fullName": " UiSidePanel.vue a component can be open by model value",
          "status": "passed",
          "title": "a component can be open by model value",
          "duration": 44,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSidePanel.vue"
          ],
          "fullName": " UiSidePanel.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 30,
          "failureMessages": []
        }
      ],
      "startTime": 1668427344667,
      "endTime": 1668427344777,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiCheckbox/UiCheckbox.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiNotification.vue"
          ],
          "fullName": " UiNotification.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 42,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNotification.vue"
          ],
          "fullName": " UiNotification.vue component is success type",
          "status": "passed",
          "title": "component is success type",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNotification.vue"
          ],
          "fullName": " UiNotification.vue component is info type",
          "status": "passed",
          "title": "component is info type",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNotification.vue"
          ],
          "fullName": " UiNotification.vue component is warning type",
          "status": "passed",
          "title": "component is warning type",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNotification.vue"
          ],
          "fullName": " UiNotification.vue component is error type",
          "status": "passed",
          "title": "component is error type",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1668012796612,
      "endTime": 1668012796705,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiNotification/UiNotification.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "composable/useActiveElement"
          ],
          "fullName": " UiBulletPoints.vue renders a component",
          "status": "passed",
          "title": "active item is null when no one items is focused",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiBulletPoints.vue"
          ],
          "fullName": " UiBulletPoints.vue component pass tag props",
          "status": "passed",
          "title": "correct active element on focus",
          "duration": 18,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiBulletPoints.vue"
          ],
          "fullName": " UiBulletPoints.vue component pass type props",
          "status": "passed",
          "title": "reset active element on blur",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useActiveElement"
          ],
          "fullName": " composable/useActiveElement correct update active element",
          "status": "passed",
          "title": "correct update active element",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1668427345369,
      "endTime": 1668427345433,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiBulletPoints/UiBulletPoints.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 236,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue clicking decrement button decrement the value",
          "status": "passed",
          "title": "clicking decrement button decrement the value",
          "duration": 28,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue clicking increment button increment the value",
          "status": "passed",
          "title": "clicking increment button increment the value",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue value can't be smallest than min",
          "status": "passed",
          "title": "value can't be smallest than min",
          "duration": 85,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiNumberStepper.vue"
          ],
          "fullName": " UiNumberStepper.vue value can't be bigger than max",
          "status": "passed",
          "title": "value can't be bigger than max",
          "duration": 27,
          "failureMessages": []
        }
      ],
      "startTime": 1668012797603,
      "endTime": 1668012797993,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiNumberStepper/UiNumberStepper.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiSwitch.vue"
          ],
          "fullName": " UiSwitch.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 79,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSwitch.vue"
          ],
          "fullName": " UiSwitch.vue render a content via switchcontrol slot",
          "status": "passed",
          "title": "render a content via switchcontrol slot",
          "duration": 38,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSwitch.vue"
          ],
          "fullName": " UiSwitch.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 16,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSwitch.vue"
          ],
          "fullName": " UiSwitch.vue a component emits update event",
          "status": "passed",
          "title": "a component emits update event",
          "duration": 20,
          "failureMessages": []
        }
      ],
      "startTime": 1668427345535,
      "endTime": 1668427345656,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiSwitch/UiSwitch.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "directive/scrollTabindex"
          ],
          "fullName": " directive/scrollTabindex remove tabindex if scrollHeight is lower than clientHeight",
          "status": "passed",
          "title": "remove tabindex if scrollHeight is lower than clientHeight",
          "duration": 43,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/scrollTabindex"
          ],
          "fullName": " directive/scrollTabindex adding tabindex if scrollHeight changed",
          "status": "passed",
          "title": "adding tabindex if scrollHeight changed",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/scrollTabindex"
          ],
          "fullName": " directive/scrollTabindex remove tabindex if clientHeight changed",
          "status": "passed",
          "title": "remove tabindex if clientHeight changed",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/scrollTabindex"
          ],
          "fullName": " directive/scrollTabindex remove tabindex if scrollHeight equals clientHeight",
          "status": "passed",
          "title": "remove tabindex if scrollHeight equals clientHeight",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/scrollTabindex"
          ],
          "fullName": " directive/scrollTabindex add tabindex if scrollHeight is greater than clientHeight",
          "status": "passed",
          "title": "add tabindex if scrollHeight is greater than clientHeight",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1668427345705,
      "endTime": 1668427345770,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/directives/scroll-tabindex/scroll-tabindex.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiRadio.vue"
          ],
          "fullName": " UiRadio.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 48,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRadio.vue"
          ],
          "fullName": " UiRadio.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 44,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRadio.vue"
          ],
          "fullName": " UiRadio.vue render a content via radio slot",
          "status": "passed",
          "title": "render a content via radio slot",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRadio.vue"
          ],
          "fullName": " UiRadio.vue render default id for non passed id property",
          "status": "passed",
          "title": "render default id for non passed id property",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRadio.vue"
          ],
          "fullName": " UiRadio.vue a radio click emits change event",
          "status": "passed",
          "title": "a radio click emits change event",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiRadio.vue"
          ],
          "fullName": " UiRadio.vue a component pass Object as value",
          "status": "passed",
          "title": "a component pass Object as value",
          "duration": 7,
          "failureMessages": []
        }
      ],
      "startTime": 1668427345814,
      "endTime": 1668427345951,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiRadio/UiRadio.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiChip.vue"
          ],
          "fullName": " UiChip.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 52,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiChip.vue"
          ],
          "fullName": " UiChip.vue component emit click:remove event",
          "status": "passed",
          "title": "component emit click:remove event",
          "duration": 28,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiChip.vue"
          ],
          "fullName": " UiChip.vue a component pass attributes for remove button",
          "status": "passed",
          "title": "a component pass attributes for remove button",
          "duration": 10,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiChip.vue"
          ],
          "fullName": " UiChip.vue render a content via remove slot",
          "status": "passed",
          "title": "render a content via remove slot",
          "duration": 24,
          "failureMessages": []
        }
      ],
      "startTime": 1668427345827,
      "endTime": 1668427345941,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiChip/UiChip.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiAlert.vue"
          ],
          "fullName": " UiAlert.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 49,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiAlert.vue"
          ],
          "fullName": " UiAlert.vue renders content via icon slot",
          "status": "passed",
          "title": "renders content via icon slot",
          "duration": 40,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiAlert.vue"
          ],
          "fullName": " UiAlert.vue renders content via message slot",
          "status": "passed",
          "title": "renders content via message slot",
          "duration": 16,
          "failureMessages": []
        }
      ],
      "startTime": 1668427346089,
      "endTime": 1668427346194,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiAlert/UiAlert.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiAccordion.vue"
          ],
          "fullName": " UiAccordion.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 34,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiAccordion.vue"
          ],
          "fullName": " UiAccordion.vue component emit single item for String v-model",
          "status": "passed",
          "title": "component emit single item for String v-model",
          "duration": 51,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiAccordion.vue"
          ],
          "fullName": " UiAccordion.vue component emit multiple items for Array v-model",
          "status": "passed",
          "title": "component emit multiple items for Array v-model",
          "duration": 16,
          "failureMessages": []
        }
      ],
      "startTime": 1668427347014,
      "endTime": 1668427347115,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiAccordion/UiAccordion.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiSimpleQuestion.vue"
          ],
          "fullName": " UiSimpleQuestion.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 49,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiSimpleQuestion.vue"
          ],
          "fullName": " UiSimpleQuestion.vue renders a component with correct amount of options",
          "status": "passed",
          "title": "renders a component with correct amount of options",
          "duration": 31,
          "failureMessages": []
        }
      ],
      "startTime": 1668427347648,
      "endTime": 1668427347728,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiSimpleQuestion/UiSimpleQuestion.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiTile.vue"
          ],
          "fullName": " UiTile.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 49,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiTile.vue"
          ],
          "fullName": " UiTile.vue renders a content via default slot",
          "status": "passed",
          "title": "renders a content via default slot",
          "duration": 51,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiTile.vue"
          ],
          "fullName": " UiTile.vue a possible to pass icon by iconAttrs property",
          "status": "passed",
          "title": "a possible to pass icon by iconAttrs property",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1668427347788,
      "endTime": 1668427347898,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiTile/UiTile.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "composable/useAttributes"
          ],
          "fullName": " composable/useAttributes attrs do not contain listeners",
          "status": "passed",
          "title": "attrs do not contain listeners",
          "duration": 39,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useAttributes"
          ],
          "fullName": " composable/useAttributes attrs is reactive",
          "status": "passed",
          "title": "attrs is reactive",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useAttributes"
          ],
          "fullName": " composable/useAttributes listeners contain only listeners",
          "status": "passed",
          "title": "listeners contain only listeners",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useAttributes"
          ],
          "fullName": " composable/useAttributes listeners is reactive",
          "status": "passed",
          "title": "listeners is reactive",
          "duration": 17,
          "failureMessages": []
        }
      ],
      "startTime": 1668427347831,
      "endTime": 1668427347913,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/composable/useAttributes/useAttributes.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiTabs.vue"
          ],
          "fullName": " UiTabs.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 42,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiTabs.vue"
          ],
          "fullName": " UiTabs.vue component emit single item for String v-model",
          "status": "passed",
          "title": "component emit single item for String v-model",
          "duration": 59,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiTabs.vue"
          ],
          "fullName": " UiTabs.vue component emit update for UiTabsItem with id instead name",
          "status": "passed",
          "title": "component emit update for UiTabsItem with id instead name",
          "duration": 23,
          "failureMessages": []
        }
      ],
      "startTime": 1668427348052,
      "endTime": 1668427348176,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiTabs/UiTabs.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "directive/focusTrap"
          ],
          "fullName": " directive/focusTrap focus state goes from last child to first child when press Tab",
          "status": "passed",
          "title": "focus state goes from last child to first child when press Tab",
          "duration": 103,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/focusTrap"
          ],
          "fullName": " directive/focusTrap focus state goes from first child to last child when press Tab + Shift",
          "status": "passed",
          "title": "focus state goes from first child to last child when press Tab + Shift",
          "duration": 13,
          "failureMessages": []
        }
      ],
      "startTime": 1668427348063,
      "endTime": 1668427348179,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/directives/focus-trap/focus-trap.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiButton.vue"
          ],
          "fullName": " UiButton.vue render a component",
          "status": "passed",
          "title": "render a component",
          "duration": 35,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiButton.vue"
          ],
          "fullName": " UiButton.vue render a content via default slot",
          "status": "passed",
          "title": "render a content via default slot",
          "duration": 26,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiButton.vue"
          ],
          "fullName": " UiButton.vue component is router-link when you pass it a \"to\" prop",
          "status": "passed",
          "title": "component is router-link when you pass it a \"to\" prop",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiButton.vue"
          ],
          "fullName": " UiButton.vue component is link when you pass it a  \"href\" prop",
          "status": "passed",
          "title": "component is link when you pass it a  \"href\" prop",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiButton.vue"
          ],
          "fullName": " UiButton.vue component is a button without \"to\" and \"href\" props",
          "status": "passed",
          "title": "component is a button without \"to\" and \"href\" props",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1668427348287,
      "endTime": 1668427348366,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiButton/UiButton.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "helpers/focusElement"
          ],
          "fullName": " helpers/focusElement focus element",
          "status": "passed",
          "title": "focus element",
          "duration": 72,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/focusElement"
          ],
          "fullName": " helpers/focusElement focus element with visible focus",
          "status": "passed",
          "title": "focus element with visible focus",
          "duration": 11,
          "failureMessages": []
        }
      ],
      "startTime": 1668427349241,
      "endTime": 1668427349324,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/helpers/focus-element/focus-element.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiLink.vue"
          ],
          "fullName": " UiLink.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 34,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiLink.vue"
          ],
          "fullName": " UiLink.vue component is router-link when you pass it a \"to\" prop",
          "status": "passed",
          "title": "component is router-link when you pass it a \"to\" prop",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiLink.vue"
          ],
          "fullName": " UiLink.vue component is link when you pass it a  \"href\" propf",
          "status": "passed",
          "title": "component is link when you pass it a  \"href\" propf",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiLink.vue"
          ],
          "fullName": " UiLink.vue component is a span without \"to\" and \"href\" props",
          "status": "passed",
          "title": "component is a span without \"to\" and \"href\" props",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiLink.vue"
          ],
          "fullName": " UiLink.vue component hasn't link attrs when you put tag",
          "status": "passed",
          "title": "component hasn't link attrs when you put tag",
          "duration": 5,
          "failureMessages": []
        }
      ],
      "startTime": 1668427349823,
      "endTime": 1668427349880,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiLink/UiLink.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiHeading.vue"
          ],
          "fullName": " UiHeading.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 37,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeading.vue"
          ],
          "fullName": " UiHeading.vue renders an h2 element by default",
          "status": "passed",
          "title": "renders an h2 element by default",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeading.vue"
          ],
          "fullName": " UiHeading.vue renders heading corresponding to selected level",
          "status": "passed",
          "title": "renders heading corresponding to selected level",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeading.vue"
          ],
          "fullName": " UiHeading.vue renders heading tag provided by tag prop",
          "status": "passed",
          "title": "renders heading tag provided by tag prop",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiHeading.vue"
          ],
          "fullName": " UiHeading.vue renders different styles for an element when special class is provided",
          "status": "passed",
          "title": "renders different styles for an element when special class is provided",
          "duration": 6,
          "failureMessages": []
        }
      ],
      "startTime": 1668427349912,
      "endTime": 1668427349995,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiHeading/UiHeading.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiTextarea.vue"
          ],
          "fullName": " UiTextarea.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 43,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiTextarea.vue"
          ],
          "fullName": " UiTextarea.vue render a native attributes on root element",
          "status": "passed",
          "title": "render a native attributes on root element",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiTextarea.vue"
          ],
          "fullName": " UiTextarea.vue a component emits input event",
          "status": "passed",
          "title": "a component emits input event",
          "duration": 10,
          "failureMessages": []
        }
      ],
      "startTime": 1668427349929,
      "endTime": 1668427350003,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiTextarea/UiTextarea.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiPopover.vue"
          ],
          "fullName": " UiPopover.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 43,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiPopover.vue"
          ],
          "fullName": " UiPopover.vue a component emit close event",
          "status": "passed",
          "title": "a component emit close event",
          "duration": 45,
          "failureMessages": []
        }
      ],
      "startTime": 1668427350317,
      "endTime": 1668427350405,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiPopover/UiPopover.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "directive/bodyScrollLock"
          ],
          "fullName": " directive/bodyScrollLock The directive add styles to body",
          "status": "passed",
          "title": "The directive add styles to body",
          "duration": 64,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "directive/bodyScrollLock"
          ],
          "fullName": " directive/bodyScrollLock The directive removes body styles before the component unmounts",
          "status": "passed",
          "title": "The directive removes body styles before the component unmounts",
          "duration": 15,
          "failureMessages": []
        }
      ],
      "startTime": 1668427350381,
      "endTime": 1668427350460,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/directives/body-scroll-lock/body-scroll-lock.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiLoader.vue"
          ],
          "fullName": " UiLoader.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 62,
          "failureMessages": []
        }
      ],
      "startTime": 1668427350449,
      "endTime": 1668427350511,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiLoader/UiLoader.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiIcon.vue"
          ],
          "fullName": " UiIcon.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 33,
          "failureMessages": []
        }
      ],
      "startTime": 1668427351303,
      "endTime": 1668427351336,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiIcon/UiIcon.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiText.vue"
          ],
          "fullName": " UiText.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 49,
          "failureMessages": []
        }
      ],
      "startTime": 1668427352038,
      "endTime": 1668427352087,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiText/UiText.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiBackdrop.vue"
          ],
          "fullName": " UiBackdrop.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 31,
          "failureMessages": []
        }
      ],
      "startTime": 1668427352082,
      "endTime": 1668427352113,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiBackdrop/UiBackdrop.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiCard.vue"
          ],
          "fullName": " UiCard.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 49,
          "failureMessages": []
        }
      ],
      "startTime": 1668427352143,
      "endTime": 1668427352192,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiCard/UiCard.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst return string with first letter capitalized when first is lowercase",
          "status": "passed",
          "title": "return string with first letter capitalized when first is lowercase",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst return string when first letter is capitalize",
          "status": "passed",
          "title": "return string when first letter is capitalize",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst return string when number is first char",
          "status": "passed",
          "title": "return string when number is first char",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst return string when special character is first",
          "status": "passed",
          "title": "return string when special character is first",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst return string when white space is first",
          "status": "passed",
          "title": "return string when white space is first",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst return empty string",
          "status": "passed",
          "title": "return empty string",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst thrown type error when parameter is undefined",
          "status": "passed",
          "title": "thrown type error when parameter is undefined",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst thrown type error when parameter is null",
          "status": "passed",
          "title": "thrown type error when parameter is null",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/capitalizeFirst"
          ],
          "fullName": " helpers/capitalizeFirst thrown type error when parameter is type number",
          "status": "passed",
          "title": "thrown type error when parameter is type number",
          "duration": 1,
          "failureMessages": []
        }
      ],
      "startTime": 1668427352404,
      "endTime": 1668427352425,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/helpers/capitalize-first/capitalize-first.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return correct component tag when parameter has property href",
          "status": "passed",
          "title": "return correct component tag when parameter has property href",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return correct component tag when parameter has property to",
          "status": "passed",
          "title": "return correct component tag when parameter has property to",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return correct component tag when parameter has property tag",
          "status": "passed",
          "title": "return correct component tag when parameter has property tag",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return undefined when parameter doesn't have any property",
          "status": "passed",
          "title": "return undefined when parameter doesn't have any property",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink thrown error when parameter is null",
          "status": "passed",
          "title": "thrown error when parameter is null",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useKeyValidation"
          ],
          "fullName": " composable/useKeyValidation pressed key value length is greater than 1",
          "status": "passed",
          "title": "thrown error when parameter is undefined",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return correct attributes when parameter has property href",
          "status": "passed",
          "title": "return correct attributes when parameter has property href",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return correct attributes when parameter has property to",
          "status": "passed",
          "title": "return correct attributes when parameter has property to",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return empty object when parameter doesn't have property href and to",
          "status": "passed",
          "title": "return empty object when parameter doesn't have property href and to",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return empty route attrs when parameter property href is undefined",
          "status": "passed",
          "title": "return empty route attrs when parameter property href is undefined",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return empty route attrs when parameter property href is null",
          "status": "passed",
          "title": "return empty route attrs when parameter property href is null",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return empty route attrs when parameter property to is undefined",
          "status": "passed",
          "title": "return empty route attrs when parameter property to is undefined",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useLink"
          ],
          "fullName": " composable/useLink return empty route attrs when parameter property to is null",
          "status": "passed",
          "title": "return empty route attrs when parameter property to is null",
          "duration": 1,
          "failureMessages": []
        }
      ],
      "startTime": 1668427352584,
      "endTime": 1668427352598,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/composable/useLink/useLink.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiMegaMenu.vue"
          ],
          "fullName": " UiMegaMenu.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 32,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "UiMegaMenu.vue"
          ],
          "fullName": " UiMegaMenu.vue component emit item to open",
          "status": "passed",
          "title": "component emit item to open",
          "duration": 19,
          "failureMessages": []
        }
      ],
      "startTime": 1668427352664,
      "endTime": 1668427352715,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiMegaMenu/UiMegaMenu.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiProgressbar.vue"
          ],
          "fullName": " UiProgressbar.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 38,
          "failureMessages": []
        }
      ],
      "startTime": 1668427353575,
      "endTime": 1668427353613,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/molecules/UiProgressbar/UiProgressbar.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "composable/useKeyValidation"
          ],
          "fullName": " composable/useKeyValidation pressed key is digit",
          "status": "passed",
          "title": "pressed key is digit",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useKeyValidation"
          ],
          "fullName": " composable/useKeyValidation pressed key is different than digit",
          "status": "passed",
          "title": "pressed key is different than digit",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useKeyValidation"
          ],
          "fullName": " composable/useKeyValidation pressed key value length is greater than 1",
          "status": "passed",
          "title": "pressed key value length is greater than 1",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "startTime": 1668427353873,
      "endTime": 1668427353878,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/composable/useKeyValidation/useKeyValidation.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiProgress.vue"
          ],
          "fullName": " UiProgress.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 31,
          "failureMessages": []
        }
      ],
      "startTime": 1668427354083,
      "endTime": 1668427354114,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/atoms/UiProgress/UiProgress.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiContainer.vue"
          ],
          "fullName": " UiContainer.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 33,
          "failureMessages": []
        }
      ],
      "startTime": 1668427354179,
      "endTime": 1668427354212,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiContainer/UiContainer.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "helpers/removeNonDigits"
          ],
          "fullName": " helpers/removeNonDigits given %p as arguments, returns %p  ",
          "status": "passed",
          "title": "given %p as arguments, returns %p  ",
          "duration": 4,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/removeNonDigits"
          ],
          "fullName": " helpers/removeNonDigits given %p as arguments, returns %p 2e 2",
          "status": "passed",
          "title": "given %p as arguments, returns %p 2e 2",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/removeNonDigits"
          ],
          "fullName": " helpers/removeNonDigits given %p as arguments, returns %p null null",
          "status": "passed",
          "title": "given %p as arguments, returns %p null null",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/removeNonDigits"
          ],
          "fullName": " helpers/removeNonDigits given %p as arguments, returns %p ea2f/ 2",
          "status": "passed",
          "title": "given %p as arguments, returns %p ea2f/ 2",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "helpers/removeNonDigits"
          ],
          "fullName": " helpers/removeNonDigits given %p as arguments, returns %p 2210918 2210918",
          "status": "passed",
          "title": "given %p as arguments, returns %p 2210918 2210918",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "startTime": 1668427354319,
      "endTime": 1668427354325,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/utilities/helpers/remove-non-digits/remove-non-digits.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "UiList.vue"
          ],
          "fullName": " UiList.vue renders a component",
          "status": "passed",
          "title": "renders a component",
          "duration": 37,
          "failureMessages": []
        }
      ],
      "startTime": 1668427354450,
      "endTime": 1668427354487,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/components/organisms/UiList/UiList.spec.js"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "composable/useMutationObserver"
          ],
          "fullName": " composable/useMutationObserver not supported when window doesn't have IntersectionObserver property",
          "status": "passed",
          "title": "not supported when window doesn't have IntersectionObserver property",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useMutationObserver"
          ],
          "fullName": " composable/useMutationObserver no mutation observer added when not supported",
          "status": "passed",
          "title": "no mutation observer added when not supported",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useMutationObserver"
          ],
          "fullName": " composable/useMutationObserver supported when window have property IntersectionObserver",
          "status": "passed",
          "title": "supported when window have property IntersectionObserver",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "composable/useMutationObserver"
          ],
          "fullName": " composable/useMutationObserver mutation observer added when supported",
          "status": "passed",
          "title": "mutation observer added when supported",
          "duration": 2,
          "failureMessages": []
        }
      ],
      "startTime": 1668427354573,
      "endTime": 1668427354581,
      "status": "passed",
      "message": "",
      "name": "/Users/przemyslawspaczek/Projects/symptom-checker-ui-kit/src/composable/useMutationObserver/useMutationObserver.spec.js"
    }
  ]
}
